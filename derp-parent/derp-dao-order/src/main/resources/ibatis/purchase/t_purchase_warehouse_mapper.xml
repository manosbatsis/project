<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.topideal.mapper.purchase.PurchaseWarehouseMapper'>

        <!-- 关系映射 -->
    <resultMap id="PurchaseWarehouseModelMap" type="PurchaseWarehouseModel" >
                <result property="code" column="code" />
                <result property="lbxNo" column="lbx_no" />
                <result property="contractNo" column="contract_no" />
                <result property="inboundDate" column="inbound_date" />
                <result property="depotId" column="depot_id" />
                <result property="tallyingOrderCode" column="tallying_order_code" />
                <result property="crossStatus" column="cross_status" />
                <result property="merchantName" column="merchant_name" />
                <result property="warehouseDate" column="warehouse_date" />
                <result property="declareOrderId" column="declare_order_id" />
                <result property="merchantId" column="merchant_id" />
                <result property="declareOrderCode" column="declare_order_code" />
                <result property="tallyingDate" column="tallying_date" />
                <result property="id" column="id" />
                <result property="state" column="state" />
                <result property="tallyingOrderId" column="tallying_order_id" />
                <result property="createDate" column="create_date" />
                <result property="depotName" column="depot_name" />
                <result property="modifyDate" column="modify_date" />
                <result property="confirmDate" column="confirm_date" />
                <result property="palletNum" column="pallet_num" />
                <result property="warehouser" column="warehouser" />
                <result property="creater" column="creater" />
                <result property="tallyingUnit" column="tallying_unit" />
                <result property="businessModel" column="business_model" />
                <result property="buName" column="bu_name" />
                <result property="buId" column="bu_id" />
                <result property="correlationStatus" column="correlation_status" />
                <result property="extraCode" column="extra_code" />
                <result property="currency" column="currency" />
                <result property="isWriteOff" column="is_write_off" />
                <result property="oriWarehouseCode" column="ori_warehouse_code" />
    </resultMap>

    <!-- 查询所有信息 -->
    <select id="list" resultMap='PurchaseWarehouseModelMap' parameterType='PurchaseWarehouseModel'>
        select <include refid='sql_columns' /> from t_purchase_warehouse  <include refid='sql_where' />
    </select>

    <!-- 查询所有信息 分页 -->
    <select id='listByPage' resultMap='PurchaseWarehouseModelMap' parameterType='PurchaseWarehouseModel'>
        select <include refid='sql_columns' /> from t_purchase_warehouse  <include refid='sql_where' />
    </select>

    <!-- 条件查询 -->
    <select id='get' resultMap='PurchaseWarehouseModelMap' parameterType='PurchaseWarehouseModel' >
        select <include refid='sql_columns' /> from t_purchase_warehouse  <include refid='sql_where' />
    </select>

    <!-- 新增数据 -->
    <insert id='insert' parameterType='PurchaseWarehouseModel' keyProperty="id" useGeneratedKeys="true">
    INSERT INTO t_purchase_warehouse
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='code!=null and !"".equals(code)' > code , </if>
                <if test='lbxNo!=null and !"".equals(lbxNo)' > lbx_no , </if>
                <if test='contractNo!=null and !"".equals(contractNo)' > contract_no , </if>
                <if test='inboundDate!=null' > inbound_date , </if>
                <if test='depotId!=null' > depot_id , </if>
                <if test='tallyingOrderCode!=null and !"".equals(tallyingOrderCode)' > tallying_order_code , </if>
                <if test='crossStatus!=null and !"".equals(crossStatus)' > cross_status , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' > merchant_name , </if>
                <if test='warehouseDate!=null' > warehouse_date , </if>
                <if test='declareOrderId!=null' > declare_order_id , </if>
                <if test='merchantId!=null' > merchant_id , </if>
                <if test='declareOrderCode!=null and !"".equals(declareOrderCode)' > declare_order_code , </if>
                <if test='tallyingDate!=null' > tallying_date , </if>
                <if test='id!=null' > id , </if>
                <if test='state!=null and !"".equals(state)' > state , </if>
                <if test='tallyingOrderId!=null' > tallying_order_id , </if>
                <if test='createDate!=null' > create_date , </if>
                <if test='depotName!=null and !"".equals(depotName)' > depot_name , </if>
                <if test='modifyDate!=null' > modify_date , </if>
                <if test='confirmDate!=null' > confirm_date , </if>
                <if test='palletNum!=null' > pallet_num , </if>
                <if test='warehouser!=null' > warehouser , </if>
                <if test='creater!=null' > creater , </if>
                <if test='tallyingUnit!=null and !"".equals(tallyingUnit)' > tallying_unit , </if>
                <if test='businessModel!=null and !"".equals(businessModel)' > business_model , </if>
                <if test='buName!=null and !"".equals(buName)' > bu_name , </if>
                <if test='buId!=null' >bu_id , </if>
                <if test='correlationStatus!=null and !"".equals(correlationStatus)' > correlation_status , </if>
                <if test='extraCode!=null and !"".equals(extraCode)' > extra_code , </if>
                <if test='currency!=null and !"".equals(currency)' > currency , </if>
                <if test='isWriteOff!=null and !"".equals(isWriteOff)' > is_write_off , </if>
                <if test='oriWarehouseCode!=null and !"".equals(oriWarehouseCode)' > ori_warehouse_code , </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='code!=null and !"".equals(code)' > TRIM(#{code}) , </if>
                <if test='lbxNo!=null and !"".equals(lbxNo)' > TRIM(#{lbxNo}) , </if>
                <if test='contractNo!=null and !"".equals(contractNo)' > TRIM(#{contractNo}) , </if>
                <if test='inboundDate!=null' > #{inboundDate} , </if>
                <if test='depotId!=null' > #{depotId} , </if>
                <if test='tallyingOrderCode!=null and !"".equals(tallyingOrderCode)' > TRIM(#{tallyingOrderCode}) , </if>
                <if test='crossStatus!=null and !"".equals(crossStatus)' > TRIM(#{crossStatus}) , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' > TRIM(#{merchantName}) , </if>
                <if test='warehouseDate!=null' > #{warehouseDate} , </if>
                <if test='declareOrderId!=null' > #{declareOrderId} , </if>
                <if test='merchantId!=null' > #{merchantId} , </if>
                <if test='declareOrderCode!=null and !"".equals(declareOrderCode)' > TRIM(#{declareOrderCode}) , </if>
                <if test='tallyingDate!=null' > #{tallyingDate} , </if>
                <if test='id!=null' > #{id} , </if>
                <if test='state!=null and !"".equals(state)' > #{state} , </if>
                <if test='tallyingOrderId!=null' > #{tallyingOrderId} , </if>
                <if test='createDate!=null' > #{createDate} , </if>
                <if test='depotName!=null and !"".equals(depotName)' > TRIM(#{depotName}) , </if>
                <if test='modifyDate!=null' > #{modifyDate} , </if>
                <if test='confirmDate!=null' > #{confirmDate} , </if>
                <if test='palletNum!=null' > #{palletNum} , </if>
                <if test='warehouser!=null' > #{warehouser} , </if>
                <if test='creater!=null' > #{creater} , </if>
                <if test='tallyingUnit!=null and !"".equals(tallyingUnit)' > TRIM(#{tallyingUnit}) , </if>
                <if test='businessModel!=null and !"".equals(businessModel)' > TRIM(#{businessModel}) , </if>
                <if test='buName!=null and !"".equals(buName)' > #{buName} , </if>
                <if test='buId!=null' > #{buId} , </if>
                <if test='correlationStatus!=null and !"".equals(correlationStatus)' > #{correlationStatus} , </if>
                <if test='extraCode!=null and !"".equals(extraCode)' > #{extraCode} , </if>
                <if test='currency!=null and !"".equals(currency)' > #{currency} , </if>
                <if test='isWriteOff!=null and !"".equals(isWriteOff)' > #{isWriteOff} , </if>
                <if test='oriWarehouseCode!=null and !"".equals(oriWarehouseCode)' > #{oriWarehouseCode} , </if>
        </trim>
    </insert>

    <!-- 修改数据 -->
    <update id='update' parameterType='PurchaseWarehouseModel' keyProperty="id" useGeneratedKeys="true">
    UPDATE  t_purchase_warehouse SET
        <trim  suffixOverrides=",">
                <if test='code!=null and !"".equals(code)' >code= TRIM(#{code}) , </if>
                <if test='lbxNo!=null and !"".equals(lbxNo)' >lbx_no= TRIM(#{lbxNo}) , </if>
                <if test='contractNo!=null and !"".equals(contractNo)' >contract_no= TRIM(#{contractNo}) , </if>
                <if test='inboundDate!=null' > inbound_date= #{inboundDate} , </if>
                <if test='depotId!=null' > depot_id= #{depotId} , </if>
                <if test='tallyingOrderCode!=null and !"".equals(tallyingOrderCode)' >tallying_order_code= TRIM(#{tallyingOrderCode}) , </if>
                <if test='crossStatus!=null and !"".equals(crossStatus)' >cross_status= TRIM(#{crossStatus}) , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= TRIM(#{merchantName}) , </if>
                <if test='warehouseDate!=null' > warehouse_date= #{warehouseDate} , </if>
                <if test='declareOrderId!=null' > declare_order_id= #{declareOrderId} , </if>
                <if test='merchantId!=null' > merchant_id= #{merchantId} , </if>
                <if test='declareOrderCode!=null and !"".equals(declareOrderCode)' >declare_order_code= TRIM(#{declareOrderCode}) , </if>
                <if test='tallyingDate!=null' > tallying_date= #{tallyingDate} , </if>
                <if test='id!=null' > id= #{id} , </if>
                <if test='state!=null and !"".equals(state)' >state= TRIM(#{state}) , </if>
                <if test='tallyingOrderId!=null' > tallying_order_id= #{tallyingOrderId} , </if>
                <if test='createDate!=null' > create_date= #{createDate} , </if>
                <if test='depotName!=null and !"".equals(depotName)' >depot_name= TRIM(#{depotName}) , </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} , </if>
                <if test='confirmDate!=null' > confirm_date= #{confirmDate} , </if>
                <if test='palletNum!=null' > pallet_num= #{palletNum} , </if>
                <if test='warehouser!=null' > warehouser= #{warehouser} , </if>
                <if test='creater!=null' > creater= #{creater} , </if>
                <if test='tallyingUnit!=null and !"".equals(tallyingUnit)' >tallying_unit= TRIM(#{tallyingUnit}) , </if>
                <if test='businessModel!=null and !"".equals(businessModel)' >business_model= TRIM(#{businessModel}) , </if>
                <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} , </if>
                <if test='buId!=null' > bu_id= #{buId} , </if>
                <if test='correlationStatus!=null and !"".equals(correlationStatus)' >correlation_status= #{correlationStatus} , </if>
                <if test='extraCode!=null and !"".equals(extraCode)' >extra_code= #{extraCode} , </if>
                <if test='currency!=null and !"".equals(currency)' >currency= #{currency} , </if>
                <if test='isWriteOff!=null and !"".equals(isWriteOff)' >is_write_off= #{isWriteOff} , </if>
                <if test='oriWarehouseCode!=null and !"".equals(oriWarehouseCode)' >ori_warehouse_code= #{oriWarehouseCode} , </if>
        </trim>
        <where>
            id=#{id}
        </where>
    </update>

    <!-- 删除数据 -->
    <delete id='del' parameterType='java.lang.Long'>
        delete from t_purchase_warehouse  where id=#{id}
    </delete>

    <!-- 批量删除数据 -->
    <delete id='batchDel' parameterType='java.util.ArrayList'>
        delete from t_purchase_warehouse where id in
        <foreach collection='list' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
    </delete>

    <!-- 表字段 -->
    <sql id='sql_columns'>
        code,
        lbx_no,
        contract_no,
        inbound_date,
        depot_id,
        tallying_order_code,
        cross_status,
        merchant_name,
        warehouse_date,
        declare_order_id,
        merchant_id,
        declare_order_code,
        tallying_date,
        id,
        state,
        tallying_order_id,
        create_date,
        depot_name,
        modify_date,
        confirm_date,
        pallet_num,
        warehouser,
        creater,
        tallying_unit,
        business_model,
        bu_name,
        bu_id,
        correlation_status,
        extra_code,
        currency,
        is_write_off,
        ori_warehouse_code
    </sql>

    <!-- 查询条件 -->
    <sql id='sql_where'>
        <where>
            <trim suffixOverrides='and'>
                <if test='code!=null and !"".equals(code)' >code= #{code} and </if>
                <if test='lbxNo!=null and !"".equals(lbxNo)' >lbx_no= #{lbxNo} and </if>
                <if test='contractNo!=null and !"".equals(contractNo)' >contract_no= #{contractNo} and </if>
                <if test='inboundDate!=null' > inbound_date= #{inboundDate} and </if>
                <if test='depotId!=null' > depot_id= #{depotId} and </if>
                <if test='tallyingOrderCode!=null and !"".equals(tallyingOrderCode)' >tallying_order_code= #{tallyingOrderCode} and </if>
                <if test='crossStatus!=null and !"".equals(crossStatus)' >cross_status= #{crossStatus} and </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                <if test='warehouseDate!=null' > warehouse_date= #{warehouseDate} and </if>
                <if test='declareOrderId!=null' > declare_order_id= #{declareOrderId} and </if>
                <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                <if test='declareOrderCode!=null and !"".equals(declareOrderCode)' >declare_order_code= #{declareOrderCode} and </if>
                <if test='tallyingDate!=null' > tallying_date= #{tallyingDate} and </if>
                <if test='id!=null' > id= #{id} and </if>
                <if test='state!=null and !"".equals(state)' >state= #{state} and </if>
                <if test='tallyingOrderId!=null' > tallying_order_id= #{tallyingOrderId} and </if>
                <if test='createDate!=null' > create_date= #{createDate} and </if>
                <if test='depotName!=null and !"".equals(depotName)' >depot_name= #{depotName} and </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                <if test='confirmDate!=null' > confirm_date= #{confirmDate} and </if>
                <if test='palletNum!=null' > pallet_num= #{palletNum} and </if>
                <if test='warehouser!=null' > warehouser= #{warehouser} and </if>
                <if test='creater!=null' > creater= #{creater} and </if>
                <if test='tallyingUnit!=null and !"".equals(tallyingUnit)' >tallying_unit= #{tallyingUnit} and </if>
                <if test='businessModel!=null and !"".equals(businessModel)' >business_model= #{businessModel} and </if>
                <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} and </if>
                <if test='buId!=null' > bu_id= #{buId} and </if>
                <if test='correlationStatus!=null and !"".equals(correlationStatus)' >correlation_status= #{correlationStatus} and </if>
                <if test='extraCode!=null and !"".equals(extraCode)' >extra_code= #{extraCode} and </if>
                <if test='currency!=null and !"".equals(currency)' >currency= #{currency} and </if>
                <if test='isWriteOff!=null and !"".equals(isWriteOff)' >is_write_off= #{isWriteOff} and </if>
                <if test='oriWarehouseCode!=null and !"".equals(oriWarehouseCode)' >ori_warehouse_code= #{oriWarehouseCode} and </if>
            	state != "006" and
            </trim>
        </where>
    </sql>

	<!--自定义SQL-->

    <!-- 获取采购入库货单和采购入库单商品批次resultMap -->
	<resultMap type="map" id="PurchaseItemBatchMap">
  		 <result property="merchantId" column="merchant_id" />
         <result property="depotId" column="depot_id" />
         <result property="depotName" column="depot_name" />
   		 <collection property="itemList" ofType="map" javaType="list">
         <result property="id" column="purchase_warehouse_item_id" />
         	  <collection property="batchList"  ofType="map" javaType="list">
		           <result property="id" column="purchase_warehouse_batch_id" />
		           <result property="goodsId" column="goods_id" />
		           <result property="batchNo" column="batch_no" />
		           <result property="normalNum" column="normal_num" />
		           <result property="productionDate" column="production_date" />
		           <result property="overdueDate" column="overdue_date" />
	          </collection>
	    </collection>
	</resultMap>

    <!-- 获取采购入库货单和采购入库单商品批次 -->
    <select id='getPurchaseItemBatch' resultMap='PurchaseItemBatchMap' parameterType='PurchaseWarehouseModel' >
        select
        	s1.id as purchase_warehouse_id,
			s1.merchant_id,s1.depot_id,s1.depot_name,
			s2.id as purchase_warehouse_item_id,
			s3.id as purchase_warehouse_batch_id,
			s3.goods_id,s3.batch_no,s3.normal_num,
			s3.production_date,s3.overdue_date
		from t_purchase_warehouse s1
		LEFT JOIN t_purchase_warehouse_item s2 on s1.id =s2.warehouse_id
		LEFT JOIN t_purchase_warehouse_batch s3 ON s2.id= s3.item_id
		where s1.tallying_order_code=#{tallyingOrderCode} and s1.declare_order_code=#{declareOrderCode}
    </select>

    <resultMap id="PurchaseWarehouseModelMap2" type="PurchaseWarehouseModel" >
                <result property="depotName" column="depot_name" />
                <result property="code" column="code" />
                <result property="lbxNo" column="lbx_no" />
                <result property="inboundDate" column="inbound_date" />
                <result property="depotId" column="depot_id" />
                <result property="tallyingOrderCode" column="tallying_order_code" />
                <result property="crossStatus" column="cross_status" />
                <result property="merchantName" column="merchant_name" />
                <result property="warehouseDate" column="warehouse_date" />
                <result property="confirmDate" column="confirm_date" />
                <result property="palletNum" column="pallet_num" />
                <result property="declareOrderId" column="declare_order_id" />
                <result property="merchantId" column="merchant_id" />
                <result property="warehouser" column="warehouser" />
                <result property="creater" column="creater" />
                <result property="declareOrderCode" column="declare_order_code" />
                <result property="tallyingDate" column="tallying_date" />
                <result property="id" column="id" />
                <result property="state" column="state" />
                <result property="tallyingOrderId" column="tallying_order_id" />
                <result property="createDate" column="create_date" />
                <result property="buName" column="bu_name" />
                <result property="buId" column="bu_id" />
                <result property="correlationStatus" column="correlation_status" />
                <association property="itemList" column="id" select="getItem" />
    </resultMap>

    <resultMap id="PurchaseWarehouseModelMap4" type="PurchaseWarehouseDTO" >
                <result property="depotName" column="depot_name" />
                <result property="code" column="code" />
                <result property="lbxNo" column="lbx_no" />
                <result property="inboundDate" column="inbound_date" />
                <result property="depotId" column="depot_id" />
                <result property="tallyingOrderCode" column="tallying_order_code" />
                <result property="crossStatus" column="cross_status" />
                <result property="merchantName" column="merchant_name" />
                <result property="warehouseDate" column="warehouse_date" />
                <result property="confirmDate" column="confirm_date" />
                <result property="palletNum" column="pallet_num" />
                <result property="declareOrderId" column="declare_order_id" />
                <result property="merchantId" column="merchant_id" />
                <result property="warehouser" column="warehouser" />
                <result property="creater" column="creater" />
                <result property="declareOrderCode" column="declare_order_code" />
                <result property="tallyingDate" column="tallying_date" />
                <result property="id" column="id" />
                <result property="state" column="state" />
                <result property="tallyingOrderId" column="tallying_order_id" />
                <result property="createDate" column="create_date" />
                <result property="buName" column="bu_name" />
                <result property="buId" column="bu_id" />
                <result property="correlationStatus" column="correlation_status" />
                <association property="itemList" column="id" select="getItem" />
    </resultMap>

    <resultMap id="PurchaseWarehouseItemModelMap" type="PurchaseWarehouseItemDTO" >
                <result property="warehouseId" column="warehouse_id" />
                <result property="multiNum" column="multi_num" />
                <result property="lackNum" column="lack_num" />
                <result property="goodsId" column="goods_id" />
                <result property="normalNum" column="normal_num" />
                <result property="creater" column="creater" />
                <result property="id" column="id" />
                <result property="purchaseNum" column="purchase_num" />
                <result property="tallyingNum" column="tallying_num" />
                <result property="createDate" column="create_date" />
                <result property="goodsName" column="goods_name" />
                <result property="goodsNo" column="goods_no" />
                <result property="barcode" column="barcode" />
                <result property="tallyingUnit" column="tallying_unit" />
                <result property="transfer_num" column="transferNum" />
                <result property="worn_num" column="wornNum" />
                <result property="expire_num" column="expireNum" />
                <result property="purchase_price" column="purchasePrice" />
    </resultMap>

    <!-- 表头查询表体 -->
	<select id="getItem" resultMap="PurchaseWarehouseItemModelMap" parameterType="java.lang.Long">
		select
			t1.id,t1.warehouse_id,t1.goods_id,t1.purchase_num,t1.tallying_num,
			t1.normal_num,t1.multi_num,t1.lack_num,t1.goods_name,t1.goods_no,t3.price as purchase_price ,
			t1.barcode,t1.tallying_unit,sum(t2.normal_num) as transfer_num,sum(t2.worn_num) as worn_num,sum(t2.expire_num) as expire_num
		from t_purchase_warehouse_item t1
		LEFT JOIN t_purchase_warehouse_batch t2 on t1.id=t2.item_id
		left join t_purchase_order_item t3 on t3.id = t1.purchase_item_id
		where t1.warehouse_id = #{id}
		GROUP BY t1.warehouse_id,t1.purchase_item_id
	</select>

	<!-- 条件查询 -->
    <select id='getDetails' resultMap='PurchaseWarehouseModelMap2' parameterType='PurchaseWarehouseModel' >
        select <include refid='sql_columns' /> from t_purchase_warehouse  <include refid='sql_where' />
    </select>

    <select id='getDTODetails' resultMap='PurchaseWarehouseModelMap4' parameterType='PurchaseWarehouseDTO' >
        select <include refid='sql_columns' /> from t_purchase_warehouse  where id = #{id}
    </select>

    <resultMap id="PurchaseWarehouseExportDTOMap" type="PurchaseWarehouseExportDTO" >
                <result property="merchantName" column="merchant_name" />
                <result property="warehouseCode" column="warehouse_code" />
                <result property="depotCode" column="depot_code" />
                <result property="depotName" column="depot_name" />
                <result property="declareCode" column="declare_code" />
                <result property="tallyingCode" column="tallying_code" />
                <result property="tallyingDate" column="tallying_date" />
                <result property="contractNo" column="contract_no" />
                <result property="businessType" column="business_type" />
                <result property="state" column="state" />
                <result property="palletNum" column="pallet_num" />
                <result property="lbxNo" column="lbx_no" />
                <result property="inboundDate" column="inbound_date" />
                <result property="warehouseType" column="warehouse_type" />
                <result property="depotId" column="depot_id" />
                <result property="buName" column="bu_name" />
                <result property="extraCode" column="extra_code" />
                <result property="warehouseId" column="warehouse_id" />
                <collection property="itemList" javaType="list" ofType="PurchaseWarehouseItemExportDTO" column="s_id">
		            <result property="id" column="item_id" />
		            <result property="declareCode" column="declare_code" />
		            <result property="goodsNo" column="goods_no" />
		            <result property="goodsId" column="goods_id" />
		            <result property="goodsName" column="goods_name" />
		            <result property="barcode" column="barcode" />
		            <result property="purchaseNum" column="purchase_num" />
		            <result property="tallyingNum" column="tallying_num" />
		            <result property="lackNum" column="lack_num" />
		            <result property="multiNum" column="multi_num" />
		            <result property="normalNum" column="normal_num" />
		            <result property="batchNo" column="batch_no" />
		            <result property="productionDate" column="production_date" />
		            <result property="overdueDate" column="overdue_date" />
		            <result property="length" column="length" />
		            <result property="volume" column="volume" />
		            <result property="width" column="width" />
		            <result property="height" column="height" />
		            <result property="normalNum2" column="normal_num2" />
		            <result property="expireNum" column="expire_num" />
		            <result property="wornNum" column="worn_num" />
		            <result property="tallyingUnit" column="tallying_unit" />
                    <result property="purchasePrice" column="purchase_price" />
		        </collection>
    </resultMap>

    <!-- 入库明细导出 -->
    <select id='getExportDetails' resultMap='PurchaseWarehouseExportDTOMap' parameterType='java.util.List' >
		select
		  t1.`code` as warehouse_code,
		  t1.depot_id,
		  t1.depot_name,
		  t1.merchant_name,
		  t1.extra_code,
		  t1.declare_order_code as declare_code,
		  t1.tallying_order_code as tallying_code,
		  t2.tallying_date,
		  t2.contract_no,
		  10 as business_type,
		  t1.`state`,
		  t1.pallet_num,
		  t1.lbx_no,
		  t1.bu_name,
		  t1.inbound_date,
		  t4.id as item_id,
		  t4.goods_id,
		  t4.goods_no,
		  t4.goods_name,
		  t4.barcode,
		  t4.purchase_num,
		  t4.tallying_num,
		  t4.tallying_unit,
		  t4.lack_num,
		  t4.multi_num,
		  t4.normal_num,
		  t7.batch_no,
		  t7.production_date,
		  t7.overdue_date,
		  t4.length,
		  t4.volume,
		  t4.width,
		  t4.height,
		  t7.normal_num as normal_num2,
		  t7.expire_num,
		  t7.worn_num,
          t5.price as purchase_price,
          t1.id as warehouse_id
		from t_purchase_warehouse t1
		left join t_tallying_order t2 on t2.id = t1.tallying_order_id
		left join t_purchase_warehouse_item t4 on t4.warehouse_id = t1.id
		left join t_purchase_warehouse_batch t7 on t4.id = t7.item_id
        left join t_purchase_order_item t5 on t5.id = t4.purchase_item_id
		<where>
			<trim suffixOverrides='and'>
        			t1.id in
        			<foreach collection='list' item='id' separator=',' open='(' close=')'>
			            #{id}
			        </foreach>
			        and
			</trim>
		</where>
		order by t1.id desc
    </select>

    <select id='getExportDetailsByDTO' resultMap='PurchaseWarehouseExportDTOMap' parameterType='PurchaseWarehouseDTO' >
		select
		  t1.`code` as warehouse_code,
		  t1.depot_id,
		  t1.depot_name,
		  t1.merchant_name,
		  t1.extra_code,
		  t1.declare_order_code as declare_code,
		  t1.tallying_order_code as tallying_code,
		  t2.tallying_date,
		  t2.contract_no,
		  10 as business_type,
		  t1.`state`,
		  t1.pallet_num,
		  t1.lbx_no,
		  t1.bu_name,
		  t1.inbound_date,
		  t4.id as item_id,
		  t4.goods_id,
		  t4.goods_no,
		  t4.goods_name,
		  t4.barcode,
		  t4.purchase_num,
		  t4.tallying_num,
		  t4.tallying_unit,
		  t4.lack_num,
		  t4.multi_num,
		  t4.normal_num,
		  t7.batch_no,
		  t7.production_date,
		  t7.overdue_date,
		  t4.length,
		  t4.volume,
		  t4.width,
		  t4.height,
		  t7.normal_num as normal_num2,
		  t7.expire_num,
		  t7.worn_num,
		  t5.price as purchase_price,
          t1.id as warehouse_id
		from t_purchase_warehouse t1
		left join t_tallying_order t2 on t2.id = t1.tallying_order_id
		left join t_purchase_warehouse_item t4 on t4.warehouse_id = t1.id
		left join t_purchase_warehouse_batch t7 on t4.id = t7.item_id
        left join t_purchase_order_item t5 on t5.id = t4.purchase_item_id
		<include refid='sql_where_page' />
		order by t1.id desc
    </select>


	<!-- 查询所有信息 分页 -->
    <select id='getListByPage' resultType='PurchaseWarehouseDTO' parameterType='PurchaseWarehouseDTO'>
        select
        	t1.*
        from t_purchase_warehouse t1
        <include refid='sql_where_page' />
        order by t1.id desc
    </select>

    <!-- 查询条件 -->
    <sql id='sql_where_page'>
        <where>
            <trim suffixOverrides='and'>
            	<if test='purchaseCode!=null and !"".equals(purchaseCode)' >
            		t1.id in(
            			select
            				tw.warehouse_id
            			from t_warehouse_order_rel tw
            			where tw.purchase_order_id = (
            				select
            					tp.id
            				from t_purchase_order tp
            				where tp.`code` = #{purchaseCode}
            			)
            		) and
            	</if>
            	<if test='contractNo!=null and !"".equals(contractNo)' >t1.contract_no  like  concat('%',#{contractNo},'%') and </if>
                <if test='depotName!=null and !"".equals(depotName)' >t1.depot_name= #{depotName} and </if>
                <if test='code!=null and !"".equals(code)' >t1.code= #{code} and </if>
                <if test='lbxNo!=null and !"".equals(lbxNo)' >t1.lbx_no= #{lbxNo} and </if>
                <if test='inboundDate!=null' > t1.inbound_date= #{inboundDate} and </if>
                <if test='depotId!=null' > t1.depot_id= #{depotId} and </if>
                <if test='tallyingOrderCode!=null and !"".equals(tallyingOrderCode)' >t1.tallying_order_code= #{tallyingOrderCode} and </if>
                <if test='crossStatus!=null and !"".equals(crossStatus)' >t1.cross_status= #{crossStatus} and </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >t1.merchant_name= #{merchantName} and </if>
                <if test='warehouseDate!=null' > date_format(t1.warehouse_date,'%Y%m%d') = date_format(#{warehouseDate},'%Y%m%d') and </if>
                <if test='confirmDate!=null' > t1.confirm_date= #{confirmDate} and </if>
                <if test='palletNum!=null' > t1.pallet_num= #{palletNum} and </if>
                <if test='declareOrderId!=null' > t1.declare_order_id= #{declareOrderId} and </if>
                <if test='merchantId!=null' > t1.merchant_id= #{merchantId} and </if>
                <if test='warehouser!=null' > t1.warehouser= #{warehouser} and </if>
                <if test='creater!=null' > t1.creater= #{creater} and </if>
                <if test='declareOrderCode!=null and !"".equals(declareOrderCode)' > t1.declare_order_code = #{declareOrderCode}and </if>
                <if test='tallyingDate!=null' > t1.tallying_date= #{tallyingDate} and </if>
                <if test='id!=null' > t1.id= #{id} and </if>
                <if test='state!=null and !"".equals(state)' >t1.state= #{state} and </if>
                <if test='tallyingOrderId!=null' > t1.tallying_order_id= #{tallyingOrderId} and </if>
                <if test='createDate!=null' > t1.create_date= #{createDate} and </if>
                <if test='warehouseStartDate!=null and !"".equals(warehouseStartDate)' > t1.inbound_date &gt;= #{warehouseStartDate} and </if>
                <if test='warehouseEndDate!=null and !"".equals(warehouseEndDate)' > t1.inbound_date &lt;= #{warehouseEndDate} and </if>
                <if test='buName!=null and !"".equals(buName)' >t1.bu_name= #{buName} and </if>
                <if test='isWriteOff!=null and !"".equals(isWriteOff)' > t1.is_write_off = #{isWriteOff}, </if>
                <if test='buId!=null' > t1.bu_id= #{buId} and </if>
                <if test='buIds!=null' > t1.bu_id in
                	<foreach collection="buIds" item="buId" separator="," open="(" close=")">
            			#{buId}
            		</foreach>
            		and
                </if>
                <if test='correlationStatus!=null and !"".equals(correlationStatus)' >correlation_status= #{correlationStatus} and </if>
                t1.state != "006" and
            </trim>
        </where>
    </sql>

    <!-- 根据预申报单id获取采购订单集合 -->
    <select id="getWarehouseListById" resultType="string" parameterType="java.lang.Long">
    	select
    		t1.`code` as purchase_code
    	from t_purchase_order t1
		where t1.id in(
		select t2.purchase_order_id from t_warehouse_order_rel t2 where t2.warehouse_id = #{id}
		)
		order by t1.create_date
    </select>

    <resultMap id="PurchaseWarehouseExportBeanMap" type="PurchaseWarehouseExportBean" >
                <result property="goodsNo" column="goods_no" />
                <result property="warehouseCode" column="warehouse_code" />
                <result property="num2" column="num" />
                <result property="purchaseCode" column="purchase_code" />
                <result property="id" column="id" />
    </resultMap>

    <!-- 根据表头ids获取表体集合 -->
    <select id='getItemDetails' resultMap='PurchaseWarehouseExportBeanMap' parameterType='java.util.List' >
        select
			t2.id,t2.`code` as warehouse_code,t1.goods_no,t1.tallying_num as num
		from
		t_purchase_warehouse_item t1
		left join t_purchase_warehouse t2 on t1.warehouse_id = t2.id
		<where>
			<trim suffixOverrides='and'>
        			t2.id in
        			<foreach collection='list' item='id' separator=',' open='(' close=')'>
			            #{id}
			        </foreach>
			        and
			</trim>
		</where>
    </select>

    <!-- 根据ids获取集合 -->
    <select id='getListByIds' resultMap='PurchaseWarehouseModelMap' parameterType='java.util.List' >
        select
            <include refid='sql_columns' />
		from
		t_purchase_warehouse
		<where>
			<trim suffixOverrides='and'>
        			id in
        			<foreach collection='list' item='id' separator=',' open='(' close=')'>
			            #{id}
			        </foreach>
			        and
			</trim>
		</where>
    </select>
    <!-- 查询所有信息-->
    <select id='listDTO' resultType='PurchaseWarehouseDTO' parameterType='PurchaseWarehouseDTO'>
        select
        t1.*
        from t_purchase_warehouse t1
        <include refid='sql_where_page' />
        order by t1.id desc
    </select>


     <!--统计采购量未入库量-->
    <select id='getNoInWarehouseNum' resultType='map' parameterType='java.lang.Long' >
        select pur.id,SUM(IF(pur.num-IFNULL(ws.wnum,0)&lt;0,0,pur.num-IFNULL(ws.wnum,0))) AS num
        from (
            select i.id,i.goods_id,i.num from t_purchase_order_item i
            left join t_purchase_order p on i.purchase_order_id=p.id
            where p.id=#{purchaseId}
        ) pur
        left join (
            select i.purchase_item_id,b.goods_id,sum(IFNULL(b.worn_num,0)+IFNULL(b.expire_num,0)+IFNULL(b.normal_num,0)) as wnum
            from t_purchase_warehouse_batch b
            left join t_purchase_warehouse_item i on i.id=b.item_id
            left join t_purchase_warehouse w on w.id=i.warehouse_id
            where w.state='012'
                and w.id in(select warehouse_id from t_warehouse_order_rel where purchase_order_id=#{purchaseId})
            group by i.purchase_item_id
        ) ws on pur.id=ws.purchase_item_id
        where 1=1
        group by pur.id
        having num>0
    </select>
</mapper>
