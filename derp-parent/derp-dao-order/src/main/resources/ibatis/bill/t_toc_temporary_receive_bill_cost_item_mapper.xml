<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.topideal.mapper.bill.TocTemporaryReceiveBillCostItemMapper'>

      <!-- 关系映射 -->
    <resultMap id="TocTemporaryReceiveBillCostItemModelMap" type="TocTemporaryReceiveBillCostItemModel" >
            <result property="id" column="id" />
            <result property="billId" column="bill_id" />
            <result property="orderCode" column="order_code" />
            <result property="externalCode" column="external_code" />
            <result property="month" column="month" />
            <result property="shopTypeCode" column="shop_type_code" />
            <result property="merchantId" column="merchant_id" />
            <result property="merchantName" column="merchant_name" />
            <result property="buId" column="bu_id" />
            <result property="buName" column="bu_name" />
            <result property="customerId" column="customer_id" />
            <result property="customerName" column="customer_name" />
            <result property="shopCode" column="shop_code" />
            <result property="shopName" column="shop_name" />
            <result property="storePlatformCode" column="store_platform_code" />
            <result property="projectId" column="project_id" />
            <result property="projectName" column="project_name" />
            <result property="platformProjectId" column="platform_project_id" />
            <result property="platformProjectName" column="platform_project_name" />
            <result property="temporaryCurrency" column="temporary_currency" />
            <result property="temporaryRmbCost" column="temporary_rmb_cost" />
            <result property="settlementOriCost" column="settlement_ori_cost" />
            <result property="settlementRmbCost" column="settlement_rmb_cost" />
            <result property="originalCurrency" column="original_currency" />
            <result property="settlementDate" column="settlement_date" />
            <result property="settlementCode" column="settlement_code" />
            <result property="settlementMark" column="settlement_mark" />
            <result property="createDate" column="create_date" />
            <result property="modifyDate" column="modify_date" />
            <result property="writeOffAmount" column="write_off_amount" />
            <result property="orderType" column="order_type" />
            <result property="parentBrandName" column="parent_brand_name" />
            <result property="parentBrandId" column="parent_brand_id" />
            <result property="parentBrandCode" column="parent_brand_code" />
            <result property="settlementItemId" column="settlement_item_id" />
            <result property="adjustmentRmbAmount" column="adjustment_rmb_amount" />
            <result property="billInDate" column="bill_in_date" />
    </resultMap>

    <!-- 查询所有信息 -->
    <select id="list" resultMap='TocTemporaryReceiveBillCostItemModelMap' parameterType='TocTemporaryReceiveBillCostItemModel'>
        select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item  <include refid='sql_where' />
    </select>

    <!-- 查询所有信息 分页 -->
    <select id='listByPage' resultMap='TocTemporaryReceiveBillCostItemModelMap' parameterType='TocTemporaryReceiveBillCostItemModel'>
        select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item  <include refid='sql_where' />
    </select>

    <!-- 条件查询 -->
    <select id='get' resultMap='TocTemporaryReceiveBillCostItemModelMap' parameterType='TocTemporaryReceiveBillCostItemModel' >
        select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item  <include refid='sql_where' />
    </select>

        <!-- 新增数据 -->
        <insert id='insert' parameterType='TocTemporaryReceiveBillCostItemModel' keyProperty="id" useGeneratedKeys="true">
            INSERT INTO t_toc_temporary_receive_bill_cost_item
            <trim prefix="(" suffix=")" suffixOverrides="," >
                        <if test='id!=null' >id  , </if>
                        <if test='billId!=null' >bill_id  , </if>
                        <if test='orderCode!=null and !"".equals(orderCode)' > order_code , </if>
                        <if test='externalCode!=null and !"".equals(externalCode)' > external_code , </if>
                        <if test='month!=null and !"".equals(month)' > month , </if>
                        <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' > shop_type_code , </if>
                        <if test='merchantId!=null' >merchant_id  , </if>
                        <if test='merchantName!=null and !"".equals(merchantName)' > merchant_name , </if>
                        <if test='buId!=null' >bu_id  , </if>
                        <if test='buName!=null and !"".equals(buName)' > bu_name , </if>
                        <if test='customerId!=null' >customer_id  , </if>
                        <if test='customerName!=null and !"".equals(customerName)' > customer_name , </if>
                        <if test='shopCode!=null and !"".equals(shopCode)' > shop_code , </if>
                        <if test='shopName!=null and !"".equals(shopName)' > shop_name , </if>
                        <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' > store_platform_code , </if>
                        <if test='projectId!=null' >project_id  , </if>
                        <if test='projectName!=null and !"".equals(projectName)' > project_name , </if>
                        <if test='platformProjectId!=null' >platform_project_id  , </if>
                        <if test='platformProjectName!=null and !"".equals(platformProjectName)' > platform_project_name , </if>
                        <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' > temporary_currency , </if>
                        <if test='temporaryRmbCost!=null' >temporary_rmb_cost  , </if>
                        <if test='settlementOriCost!=null' >settlement_ori_cost  , </if>
                        <if test='settlementRmbCost!=null' >settlement_rmb_cost  , </if>
                        <if test='originalCurrency!=null and !"".equals(originalCurrency)' > original_currency , </if>
                        <if test='settlementDate!=null' >settlement_date  , </if>
                        <if test='settlementCode!=null and !"".equals(settlementCode)' > settlement_code , </if>
                        <if test='settlementMark!=null and !"".equals(settlementMark)' > settlement_mark , </if>
                        <if test='createDate!=null' >create_date  , </if>
                        <if test='modifyDate!=null' >modify_date  , </if>
                        <if test='writeOffAmount!=null' >write_off_amount  , </if>
                        <if test='orderType!=null and !"".equals(orderType)' > order_type , </if>
                        <if test='parentBrandName!=null and !"".equals(parentBrandName)' > parent_brand_name , </if>
                        <if test='parentBrandId!=null' >parent_brand_id  , </if>
                        <if test='parentBrandCode!=null and !"".equals(parentBrandCode)' > parent_brand_code , </if>
                        <if test='settlementItemId!=null and !"".equals(settlementItemId)' > settlement_item_id , </if>
                        <if test='adjustmentRmbAmount!=null' >adjustment_rmb_amount  , </if>
                        <if test='billInDate!=null' >bill_in_date  , </if>
            </trim>
            VALUES
            <trim prefix="(" suffix=")" suffixOverrides="," >
                        <if test='id!=null' > #{id} , </if>
                        <if test='billId!=null' > #{billId} , </if>
                        <if test='orderCode!=null and !"".equals(orderCode)' > #{orderCode} , </if>
                        <if test='externalCode!=null and !"".equals(externalCode)' > #{externalCode} , </if>
                        <if test='month!=null and !"".equals(month)' > #{month} , </if>
                        <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' > #{shopTypeCode} , </if>
                        <if test='merchantId!=null' > #{merchantId} , </if>
                        <if test='merchantName!=null and !"".equals(merchantName)' > #{merchantName} , </if>
                        <if test='buId!=null' > #{buId} , </if>
                        <if test='buName!=null and !"".equals(buName)' > #{buName} , </if>
                        <if test='customerId!=null' > #{customerId} , </if>
                        <if test='customerName!=null and !"".equals(customerName)' > #{customerName} , </if>
                        <if test='shopCode!=null and !"".equals(shopCode)' > #{shopCode} , </if>
                        <if test='shopName!=null and !"".equals(shopName)' > #{shopName} , </if>
                        <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' > #{storePlatformCode} , </if>
                        <if test='projectId!=null' > #{projectId} , </if>
                        <if test='projectName!=null and !"".equals(projectName)' > #{projectName} , </if>
                        <if test='platformProjectId!=null' > #{platformProjectId} , </if>
                        <if test='platformProjectName!=null and !"".equals(platformProjectName)' > #{platformProjectName} , </if>
                        <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' > #{temporaryCurrency} , </if>
                        <if test='temporaryRmbCost!=null' > #{temporaryRmbCost} , </if>
                        <if test='settlementOriCost!=null' > #{settlementOriCost} , </if>
                        <if test='settlementRmbCost!=null' > #{settlementRmbCost} , </if>
                        <if test='originalCurrency!=null and !"".equals(originalCurrency)' > #{originalCurrency} , </if>
                        <if test='settlementDate!=null' > #{settlementDate} , </if>
                        <if test='settlementCode!=null and !"".equals(settlementCode)' > #{settlementCode} , </if>
                        <if test='settlementMark!=null and !"".equals(settlementMark)' > #{settlementMark} , </if>
                        <if test='createDate!=null' > #{createDate} , </if>
                        <if test='modifyDate!=null' > #{modifyDate} , </if>
                        <if test='writeOffAmount!=null' > #{writeOffAmount} , </if>
                        <if test='orderType!=null and !"".equals(orderType)' > #{orderType} , </if>
                        <if test='parentBrandName!=null and !"".equals(parentBrandName)' > #{parentBrandName} , </if>
                        <if test='parentBrandId!=null' > #{parentBrandId} , </if>
                        <if test='parentBrandCode!=null and !"".equals(parentBrandCode)' > #{parentBrandCode} , </if>
                        <if test='settlementItemId!=null and !"".equals(settlementItemId)' > #{settlementItemId} , </if>
                        <if test='adjustmentRmbAmount!=null' > #{adjustmentRmbAmount} , </if>
                        <if test='billInDate!=null' > #{billInDate} , </if>
            </trim>
        </insert>

        <!-- 修改数据 -->
        <update id='update' parameterType='TocTemporaryReceiveBillCostItemModel' keyProperty="id" useGeneratedKeys="true">
            UPDATE  t_toc_temporary_receive_bill_cost_item SET
            <trim  suffixOverrides=",">
                        <if test='id!=null' > id= #{id} , </if>
                        <if test='billId!=null' > bill_id= #{billId} , </if>
                        <if test='orderCode!=null and !"".equals(orderCode)' >order_code= #{orderCode} , </if>
                        <if test='externalCode!=null and !"".equals(externalCode)' >external_code= #{externalCode} , </if>
                        <if test='month!=null and !"".equals(month)' >month= #{month} , </if>
                        <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' >shop_type_code= #{shopTypeCode} , </if>
                        <if test='merchantId!=null' > merchant_id= #{merchantId} , </if>
                        <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} , </if>
                        <if test='buId!=null' > bu_id= #{buId} , </if>
                        <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} , </if>
                        <if test='customerId!=null' > customer_id= #{customerId} , </if>
                        <if test='customerName!=null and !"".equals(customerName)' >customer_name= #{customerName} , </if>
                        <if test='shopCode!=null and !"".equals(shopCode)' >shop_code= #{shopCode} , </if>
                        <if test='shopName!=null and !"".equals(shopName)' >shop_name= #{shopName} , </if>
                        <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' >store_platform_code= #{storePlatformCode} , </if>
                        <if test='projectId!=null' > project_id= #{projectId} , </if>
                        <if test='projectName!=null and !"".equals(projectName)' >project_name= #{projectName} , </if>
                        <if test='platformProjectId!=null' > platform_project_id= #{platformProjectId} , </if>
                        <if test='platformProjectName!=null and !"".equals(platformProjectName)' >platform_project_name= #{platformProjectName} , </if>
                        <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' >temporary_currency= #{temporaryCurrency} , </if>
                        <if test='temporaryRmbCost!=null' > temporary_rmb_cost= #{temporaryRmbCost} , </if>
                        <if test='settlementOriCost!=null' > settlement_ori_cost= #{settlementOriCost} , </if>
                        <if test='settlementRmbCost!=null' > settlement_rmb_cost= #{settlementRmbCost} , </if>
                        <if test='originalCurrency!=null and !"".equals(originalCurrency)' >original_currency= #{originalCurrency} , </if>
                        <if test='settlementDate!=null' > settlement_date= #{settlementDate} , </if>
                        <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} , </if>
                        <if test='settlementMark!=null and !"".equals(settlementMark)' >settlement_mark= #{settlementMark} , </if>
                        <if test='createDate!=null' > create_date= #{createDate} , </if>
                        <if test='modifyDate!=null' > modify_date= #{modifyDate} , </if>
                        <if test='writeOffAmount!=null' > write_off_amount= #{writeOffAmount} , </if>
                        <if test='orderType!=null and !"".equals(orderType)' >order_type= #{orderType} , </if>
                        <if test='parentBrandName!=null and !"".equals(parentBrandName)' >parent_brand_name= #{parentBrandName} , </if>
                        <if test='parentBrandId!=null' > parent_brand_id= #{parentBrandId} , </if>
                        <if test='parentBrandCode!=null and !"".equals(parentBrandCode)' >parent_brand_code= #{parentBrandCode} , </if>
                        <if test='settlementItemId!=null and !"".equals(settlementItemId)' >settlement_item_id= #{settlementItemId} , </if>
                        <if test='adjustmentRmbAmount!=null' > adjustment_rmb_amount= #{adjustmentRmbAmount} , </if>
                        <if test='billInDate!=null' > bill_in_date= #{billInDate} , </if>
            </trim>
            <where>
                id=#{id}
            </where>
        </update>

    <!-- 删除数据 -->
    <delete id='del' parameterType='java.lang.Long'>
        delete from t_toc_temporary_receive_bill_cost_item  where id=#{id}
    </delete>

        <!-- 批量删除数据 -->
        <delete id='batchDel' parameterType='java.util.ArrayList'>
            delete from t_toc_temporary_receive_bill_cost_item where id in
            <foreach collection='list' item='id' separator=',' open='(' close=')'>
            #{id}
            </foreach>
        </delete>


        <!-- 表字段 -->
        <sql id='sql_columns'>
            id,
            bill_id,
            order_code,
            external_code,
            month,
            shop_type_code,
            merchant_id,
            merchant_name,
            bu_id,
            bu_name,
            customer_id,
            customer_name,
            shop_code,
            shop_name,
            store_platform_code,
            project_id,
            project_name,
            platform_project_id,
            platform_project_name,
            temporary_currency,
            temporary_rmb_cost,
            settlement_ori_cost,
            settlement_rmb_cost,
            original_currency,
            settlement_date,
            settlement_code,
            settlement_mark,
            create_date,
            modify_date,
            write_off_amount,
            order_type,
            parent_brand_name,
            parent_brand_id,
            parent_brand_code,
            settlement_item_id,
            adjustment_rmb_amount,
            bill_in_date
        </sql>

        <!-- 查询条件 -->
        <sql id='sql_where'>
            <where>
                <trim suffixOverrides='and'>
                            <if test='id!=null' > id= #{id} and </if>
                            <if test='billId!=null' > bill_id= #{billId} and </if>
                            <if test='orderCode!=null and !"".equals(orderCode)' >order_code= #{orderCode} and </if>
                            <if test='externalCode!=null and !"".equals(externalCode)' >external_code= #{externalCode} and </if>
                            <if test='month!=null and !"".equals(month)' >month= #{month} and </if>
                            <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' >shop_type_code= #{shopTypeCode} and </if>
                            <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                            <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                            <if test='buId!=null' > bu_id= #{buId} and </if>
                            <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} and </if>
                            <if test='customerId!=null' > customer_id= #{customerId} and </if>
                            <if test='customerName!=null and !"".equals(customerName)' >customer_name= #{customerName} and </if>
                            <if test='shopCode!=null and !"".equals(shopCode)' >shop_code= #{shopCode} and </if>
                            <if test='shopName!=null and !"".equals(shopName)' >shop_name= #{shopName} and </if>
                            <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' >store_platform_code= #{storePlatformCode} and </if>
                            <if test='projectId!=null' > project_id= #{projectId} and </if>
                            <if test='projectName!=null and !"".equals(projectName)' >project_name= #{projectName} and </if>
                            <if test='platformProjectId!=null' > platform_project_id= #{platformProjectId} and </if>
                            <if test='platformProjectName!=null and !"".equals(platformProjectName)' >platform_project_name= #{platformProjectName} and </if>
                            <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' >temporary_currency= #{temporaryCurrency} and </if>
                            <if test='temporaryRmbCost!=null' > temporary_rmb_cost= #{temporaryRmbCost} and </if>
                            <if test='settlementOriCost!=null' > settlement_ori_cost= #{settlementOriCost} and </if>
                            <if test='settlementRmbCost!=null' > settlement_rmb_cost= #{settlementRmbCost} and </if>
                            <if test='originalCurrency!=null and !"".equals(originalCurrency)' >original_currency= #{originalCurrency} and </if>
                            <if test='settlementDate!=null' > settlement_date= #{settlementDate} and </if>
                            <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} and </if>
                            <if test='settlementMark!=null and !"".equals(settlementMark)' >settlement_mark= #{settlementMark} and </if>
                            <if test='createDate!=null' > create_date= #{createDate} and </if>
                            <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                            <if test='writeOffAmount!=null' > write_off_amount= #{writeOffAmount} and </if>
                            <if test='orderType!=null and !"".equals(orderType)' >order_type= #{orderType} and </if>
                            <if test='parentBrandName!=null and !"".equals(parentBrandName)' >parent_brand_name= #{parentBrandName} and </if>
                            <if test='parentBrandId!=null' > parent_brand_id= #{parentBrandId} and </if>
                            <if test='parentBrandCode!=null and !"".equals(parentBrandCode)' >parent_brand_code= #{parentBrandCode} and </if>
                            <if test='settlementItemId!=null and !"".equals(settlementItemId)' >settlement_item_id= #{settlementItemId} and </if>
                            <if test='adjustmentRmbAmount!=null' > adjustment_rmb_amount= #{adjustmentRmbAmount} and </if>
                            <if test='billInDate!=null' > bill_in_date= #{billInDate} and </if>
                </trim>
            </where>
        </sql>

		<!--自定义SQL-->
        <insert id='batchSave' parameterType='java.util.List' keyProperty="id" useGeneratedKeys="true">
            INSERT INTO t_toc_temporary_receive_bill_cost_item
            <trim prefix="(" suffix=")" suffixOverrides="," >
                id,
                bill_id,
                order_code,
                external_code,
                month,
                shop_type_code,
                merchant_id,
                merchant_name,
                bu_id,
                bu_name,
                customer_id,
                customer_name,
                shop_code,
                shop_name,
                store_platform_code,
                project_id,
                project_name,
                platform_project_id,
                platform_project_name,
                temporary_currency,
                temporary_rmb_cost,
                settlement_ori_cost,
                settlement_rmb_cost,
                original_currency,
                settlement_date,
                settlement_code,
                settlement_mark,
                order_type,
                parent_brand_id,
                parent_brand_code,
                parent_brand_name,
                adjustment_rmb_amount,
                settlement_item_id
            </trim>
            VALUES
            <foreach collection="list" item="item" separator=",">
                <trim prefix="(" suffix=")" suffixOverrides="," >
                    #{item.id} ,
                    #{item.billId} ,
                    #{item.orderCode} ,
                    #{item.externalCode} ,
                    #{item.month} ,
                    #{item.shopTypeCode} ,
                    #{item.merchantId} ,
                    #{item.merchantName} ,
                    #{item.buId} ,
                    #{item.buName} ,
                    #{item.customerId} ,
                    #{item.customerName} ,
                    #{item.shopCode} ,
                    #{item.shopName} ,
                    #{item.storePlatformCode} ,
                    #{item.projectId} ,
                    #{item.projectName} ,
                    #{item.platformProjectId} ,
                    #{item.platformProjectName} ,
                    #{item.temporaryCurrency} ,
                    #{item.temporaryRmbCost} ,
                    #{item.settlementOriCost} ,
                    #{item.settlementRmbCost} ,
                    #{item.originalCurrency} ,
                    #{item.settlementDate} ,
                    #{item.settlementCode},
                    #{item.settlementMark} ,
                    #{item.orderType} ,
                    #{item.parentBrandId},
                    #{item.parentBrandCode},
                    #{item.parentBrandName},
                    #{item.adjustmentRmbAmount},
                    #{item.settlementItemId}
                </trim>
            </foreach>
        </insert>

        <sql id='dto_sql_where'>
            <where>
                <trim suffixOverrides='and'>
                    <choose>
                    <when test='billIds!=null and !"".equals(billIds)'>
                        bill_id in
                        <foreach collection="billIds.split(',')" open="(" close=")" separator="," item="id">
                            #{id}
                        </foreach>
                        <if test='settlementMark!=null and !"".equals(settlementMark)' >and settlement_mark= #{settlementMark}  </if>
                    </when>
                    <otherwise>
                        <if test='id!=null' > id= #{id} and </if>
                        <if test='billId!=null' > bill_id= #{billId} and </if>
                        <if test='orderCode!=null and !"".equals(orderCode)' >order_code= #{orderCode} and </if>
                        <if test='externalCode!=null and !"".equals(externalCode)' >external_code= #{externalCode} and </if>
                        <if test='month!=null and !"".equals(month)' >month= #{month} and </if>
                        <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' >shop_type_code= #{shopTypeCode} and </if>
                        <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                        <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                        <if test='buId!=null' > bu_id= #{buId} and </if>
                        <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} and </if>
                        <if test='customerId!=null' > customer_id= #{customerId} and </if>
                        <if test='customerName!=null and !"".equals(customerName)' >customer_name= #{customerName} and </if>
                        <if test='shopCode!=null and !"".equals(shopCode)' >shop_code= #{shopCode} and </if>
                        <if test='shopName!=null and !"".equals(shopName)' >shop_name= #{shopName} and </if>
                        <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' >store_platform_code= #{storePlatformCode} and </if>
                        <if test='projectId!=null' > project_id= #{projectId} and </if>
                        <if test='projectName!=null and !"".equals(projectName)' >project_name= #{projectName} and </if>
                        <if test='platformProjectId!=null' > platform_project_id= #{platformProjectId} and </if>
                        <if test='platformProjectName!=null and !"".equals(platformProjectName)' >platform_project_name= #{platformProjectName} and </if>
                        <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' >temporary_currency= #{temporaryCurrency} and </if>
                        <if test='temporaryRmbCost!=null' > temporary_rmb_cost= #{temporaryRmbCost} and </if>
                        <if test='settlementOriCost!=null' > settlement_ori_cost= #{settlementOriCost} and </if>
                        <if test='settlementRmbCost!=null' > settlement_rmb_cost= #{settlementRmbCost} and </if>
                        <if test='originalCurrency!=null and !"".equals(originalCurrency)' >original_currency= #{originalCurrency} and </if>
                        <if test='settlementDate!=null' > settlement_date= #{settlementDate} and </if>
                        <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} and </if>
                        <if test='settlementMark!=null and !"".equals(settlementMark)' >settlement_mark= #{settlementMark} and </if>
                        <if test='createDate!=null' > create_date= #{createDate} and </if>
                        <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                        <if test='monthStart!=null and !"".equals(monthStart)' >
                            month &gt;= #{monthStart} and
                        </if>
                        <if test='monthEnd!=null and !"".equals(monthEnd)' >
                            month &lt;= #{monthEnd} and
                        </if>
                        <if test='orderType!=null and !"".equals(orderType)' >order_type= #{orderType} and </if>
                        <if test='compareBillInDate and monthBillLastDate != null' >
                            bill_in_date > #{monthBillLastDate} and
                        </if>
                        <if test='smallEqBillInDate' >
                            (bill_in_date is null or bill_in_date &lt;= ${monthBillLastDate}) and
                        </if>
                        <if test='searchVerifyStatus' >
                            settlement_mark in ('1','2') and
                        </if>
                        <if test='searchTempOrderType' >
                            order_type in ('0','1') and
                        </if>
                    </otherwise>
                    </choose>
                </trim>
            </where>
        </sql>

        <select id="countTempBillNum" resultType="java.lang.Integer">
            select count(id)
            from t_toc_temporary_receive_bill_cost_item  <include refid='dto_sql_where' />
        </select>

        <select id="getItemListPage" parameterType="TocTemporaryReceiveBillCostItemDTO"
                resultMap='TocTemporaryReceiveBillCostItemModelMap'>
            select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where' />
            order by id desc
            limit ${begin},${pageSize}
        </select>

        <update id="batchUpdate" parameterType="java.util.List" >
            update t_toc_temporary_receive_bill_cost_item
            <trim prefix="set" suffixOverrides=",">
                <trim prefix="settlement_item_id =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        when id=#{i.id} then #{i.settlementItemId}
                    </foreach>
                </trim>
                <trim prefix="settlement_ori_cost =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        <if test="i.settlementOriCost!=null">
                            when id=#{i.id} then #{i.settlementOriCost}
                        </if>
                    </foreach>
                </trim>
                <trim prefix="settlement_rmb_cost =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        <if test="i.settlementRmbCost!=null">
                            when id=#{i.id} then #{i.settlementRmbCost}
                        </if>
                    </foreach>
                </trim>
                <trim prefix="settlement_mark =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        <if test="i.settlementMark!=null">
                            when id=#{i.id} then #{i.settlementMark}
                        </if>
                    </foreach>
                </trim>
                <trim prefix="settlement_date =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        when id=#{i.id} then #{i.settlementDate}
                    </foreach>
                </trim>
                <trim prefix="settlement_code =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        <if test='i.settlementCode!=null and !"".equals(i.settlementCode)'>
                            when id=#{i.id} then #{i.settlementCode}
                        </if>
                        <if test='i.settlementCode!=null and "".equals(i.settlementCode)'>
                            when id=#{i.id} then null
                        </if>
                    </foreach>
                </trim>
                <trim prefix="original_currency =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        when id=#{i.id} then #{i.originalCurrency}
                    </foreach>
                </trim>
                <trim prefix="temporary_rmb_cost =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        <if test="i.temporaryRmbCost!=null">
                            when id=#{i.id} then #{i.temporaryRmbCost}
                        </if>
                    </foreach>
                </trim>
                <trim prefix="adjustment_rmb_amount =case" suffix="end,">
                    <foreach collection="billItemModelList" item="i" index="index">
                        <if test="i.adjustmentRmbAmount!=null">
                            when id=#{i.id} then #{i.adjustmentRmbAmount}
                        </if>
                    </foreach>
                </trim>
            </trim>
            where
            <foreach collection="billItemModelList" separator="or" item="i" index="index" >
                id=#{i.id}
            </foreach>
        </update>

        <select id="getItemListByOrderList" resultMap='TocTemporaryReceiveBillCostItemModelMap'>
            select
                id,
                bill_id,
                order_code,
                external_code,
                platform_project_id,
                platform_project_name,
                settlement_ori_cost,
                settlement_rmb_cost,
                temporary_rmb_cost,
                write_off_amount,
                original_currency,
                settlement_date,
                settlement_code,
                settlement_mark,
                order_type
            from t_toc_temporary_receive_bill_cost_item
            where
                merchant_id = #{merchantId} and
                bu_id = #{buId} and
                store_platform_code = #{storePlatformCode} and
                order_type in ('0','1')
            <if test='"0".equals(type)' >
                and order_code IN
            </if>
            <if test='"1".equals(type)' >
                and external_code IN
            </if>
            <foreach collection="orderCodes" item="orderCode" separator="," open="(" close=")">
                #{orderCode}
            </foreach>
            order by id desc
        </select>

        <select id="getOrderCodesPage" parameterType='TocTemporaryReceiveBillCostItemDTO' resultType="java.lang.String">
            select
                order_code
            from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where' />
            order by id desc
            limit ${begin},${pageSize}
        </select>

        <select id="getExternalCodesPage" parameterType='TocTemporaryReceiveBillCostItemDTO' resultType="java.lang.String">
            select
                external_code
            from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where' />
            order by id desc
            limit ${begin},${pageSize}
        </select>

        <select id='getListByPage' resultType='TocTemporaryReceiveBillCostItemDTO' parameterType='TocTemporaryReceiveBillCostItemDTO'>
            select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where' />
            order by external_code, id desc
        </select>

        <select id='getCostDiffListByPage' resultType='TocTemporaryReceiveBillCostItemDTO' parameterType='TocTemporaryReceiveBillCostItemDTO'>
            select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item
            <where>
                <trim suffixOverrides='and'>
                    <if test='id!=null' > id= #{id} and </if>
                    <if test='billId!=null' > bill_id= #{billId} and </if>
                    <if test='orderCode!=null and !"".equals(orderCode)' >order_code= #{orderCode} and </if>
                    <if test='externalCode!=null and !"".equals(externalCode)' >external_code= #{externalCode} and </if>
                    <if test='month!=null and !"".equals(month)' >month= #{month} and </if>
                    <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' >shop_type_code= #{shopTypeCode} and </if>
                    <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                    <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                    <if test='buId!=null' > bu_id= #{buId} and </if>
                    <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} and </if>
                    <if test='customerId!=null' > customer_id= #{customerId} and </if>
                    <if test='customerName!=null and !"".equals(customerName)' >customer_name= #{customerName} and </if>
                    <if test='shopCode!=null and !"".equals(shopCode)' >shop_code= #{shopCode} and </if>
                    <if test='shopName!=null and !"".equals(shopName)' >shop_name= #{shopName} and </if>
                    <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' >store_platform_code= #{storePlatformCode} and </if>
                    <if test='projectId!=null' > project_id= #{projectId} and </if>
                    <if test='projectName!=null and !"".equals(projectName)' >project_name= #{projectName} and </if>
                    <if test='platformProjectId!=null' > platform_project_id= #{platformProjectId} and </if>
                    <if test='platformProjectName!=null and !"".equals(platformProjectName)' >platform_project_name= #{platformProjectName} and </if>
                    <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' >temporary_currency= #{temporaryCurrency} and </if>
                    <if test='temporaryRmbCost!=null' > temporary_rmb_cost= #{temporaryRmbCost} and </if>
                    <if test='settlementOriCost!=null' > settlement_ori_cost= #{settlementOriCost} and </if>
                    <if test='settlementRmbCost!=null' > settlement_rmb_cost= #{settlementRmbCost} and </if>
                    <if test='originalCurrency!=null and !"".equals(originalCurrency)' >original_currency= #{originalCurrency} and </if>
                    <if test='settlementDate!=null' > settlement_date= #{settlementDate} and </if>
                    <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} and </if>
                    <if test='settlementMark!=null and !"".equals(settlementMark)' >settlement_mark= #{settlementMark} and </if>
                    <if test='createDate!=null' > create_date= #{createDate} and </if>
                    <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                    <if test='monthStart!=null and !"".equals(monthStart)' >
                        month &gt;= #{monthStart} and
                    </if>
                    <if test='monthEnd!=null and !"".equals(monthEnd)' >
                        month &lt;= #{monthEnd} and
                    </if>
                    order_type in ('2','3') and
                </trim>
            </where>
            order by external_code, id desc
        </select>

        <select id='getItemListByMap' resultType='TocTemporaryReceiveBillCostItemDTO' parameterType='map'>
            select <include refid='sql_columns' /> from t_toc_temporary_receive_bill_cost_item
            <where>
                <trim suffixOverrides='and'>
                    <if test='id!=null' > id= #{id} and </if>
                    <if test='billId!=null' > bill_id= #{billId} and </if>
                    <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} and </if>
                    <if test='type!=null and "ADJUSTMENT".equals(type)' >
                        order_type in ('2','3') AND
                        FIND_IN_SET(#{settlementCode}, settlement_code)
                    </if>
                </trim>
            </where>
        </select>

        <select id="listForExportTempCostItemPage" resultType="map">
            select
            <include refid='sql_columns'/>
            from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where'/>
            order by bill_id desc, external_code
            limit ${begin},${pageSize}
        </select>

        <delete id="deleteByModel" parameterType="TocTemporaryReceiveBillCostItemModel" >
            delete from t_toc_temporary_receive_bill_cost_item  <include refid='sql_where' />
        </delete>

        <delete id="deletebyModelExcludeAdjustment" parameterType="TocTemporaryReceiveBillCostItemModel" >
            delete from t_toc_temporary_receive_bill_cost_item
            <where>
                <trim suffixOverrides='and'>
                    <if test='id!=null' > id= #{id} and </if>
                    <if test='billId!=null' > bill_id= #{billId} and </if>
                    <if test='orderCode!=null and !"".equals(orderCode)' >order_code= #{orderCode} and </if>
                    <if test='externalCode!=null and !"".equals(externalCode)' >external_code= #{externalCode} and </if>
                    <if test='month!=null and !"".equals(month)' >month= #{month} and </if>
                    <if test='shopTypeCode!=null and !"".equals(shopTypeCode)' >shop_type_code= #{shopTypeCode} and </if>
                    <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                    <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                    <if test='buId!=null' > bu_id= #{buId} and </if>
                    <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} and </if>
                    <if test='customerId!=null' > customer_id= #{customerId} and </if>
                    <if test='customerName!=null and !"".equals(customerName)' >customer_name= #{customerName} and </if>
                    <if test='shopCode!=null and !"".equals(shopCode)' >shop_code= #{shopCode} and </if>
                    <if test='shopName!=null and !"".equals(shopName)' >shop_name= #{shopName} and </if>
                    <if test='storePlatformCode!=null and !"".equals(storePlatformCode)' >store_platform_code= #{storePlatformCode} and </if>
                    <if test='projectId!=null' > project_id= #{projectId} and </if>
                    <if test='projectName!=null and !"".equals(projectName)' >project_name= #{projectName} and </if>
                    <if test='platformProjectId!=null' > platform_project_id= #{platformProjectId} and </if>
                    <if test='platformProjectName!=null and !"".equals(platformProjectName)' >platform_project_name= #{platformProjectName} and </if>
                    <if test='temporaryCurrency!=null and !"".equals(temporaryCurrency)' >temporary_currency= #{temporaryCurrency} and </if>
                    <if test='temporaryRmbCost!=null' > temporary_rmb_cost= #{temporaryRmbCost} and </if>
                    <if test='settlementOriCost!=null' > settlement_ori_cost= #{settlementOriCost} and </if>
                    <if test='settlementRmbCost!=null' > settlement_rmb_cost= #{settlementRmbCost} and </if>
                    <if test='originalCurrency!=null and !"".equals(originalCurrency)' >original_currency= #{originalCurrency} and </if>
                    <if test='settlementDate!=null' > settlement_date= #{settlementDate} and </if>
                    <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} and </if>
                    <if test='settlementMark!=null and !"".equals(settlementMark)' >settlement_mark= #{settlementMark} and </if>
                    <if test='createDate!=null' > create_date= #{createDate} and </if>
                    <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                    <if test='writeOffAmount!=null' > write_off_amount= #{writeOffAmount} and </if>
                    <if test='orderType!=null and !"".equals(orderType)' >order_type= #{orderType} and </if>
                    <if test='parentBrandName!=null and !"".equals(parentBrandName)' >parent_brand_name= #{parentBrandName} and </if>
                    <if test='parentBrandId!=null' > parent_brand_id= #{parentBrandId} and </if>
                    <if test='parentBrandCode!=null and !"".equals(parentBrandCode)' >parent_brand_code= #{parentBrandCode} and </if>
                    <if test='settlementItemId!=null and !"".equals(settlementItemId)' >settlement_item_id= #{settlementItemId} and </if>
                    <if test='adjustmentRmbAmount!=null' > adjustment_rmb_amount= #{adjustmentRmbAmount} and </if>
                </trim>
                AND order_type not in ('2','3')
            </where>
        </delete>

        <delete id="deleteByMap" parameterType="map" >
            delete from t_toc_temporary_receive_bill_cost_item
            <where>
                <trim suffixOverrides='and'>
                    <if test='id!=null' > id= #{id} and </if>
                    <if test='billId!=null' > bill_id= #{billId} and </if>
                    <if test='settlementCode!=null and !"".equals(settlementCode)' >settlement_code= #{settlementCode} and </if>
                    <if test='type!=null and "ADJUSTMENT".equals(type)' >order_type in ('2','3') AND</if>
                    <if test='type!=null and !"ADJUSTMENT".equals(type)' >order_type not in ('2','3') AND</if>
                </trim>
            </where>
        </delete>

<!--        <update id="updateVerifyCostItems" >-->
<!--            UPDATE t_toc_temporary_receive_bill_cost_item tt0,-->
<!--                (-->
<!--                SELECT-->
<!--                    <if test='"0".equals(type)' >-->
<!--                        t1.order_code,-->
<!--                    </if>-->
<!--                    <if test='"1".equals(type)' >-->
<!--                        t1.external_code,-->
<!--                    </if>-->
<!--                    t1.platform_project_id,-->
<!--                    t1.bill_type,-->
<!--                    sum(IF(bill_type = '1',original_amount ,- original_amount)) original_amount,-->
<!--                    sum(IF (bill_type = '1',rmb_amount ,- rmb_amount)) rmb_amount,-->
<!--                    GROUP_CONCAT(DISTINCT t2.`code` SEPARATOR ',') codes,-->
<!--                    GROUP_CONCAT(DISTINCT t1.id SEPARATOR ',') itemIds,-->
<!--                    MAX(t2.settlement_date) AS settlement_date,-->
<!--                    MAX(t2.settlement_currency) AS settlement_currency-->
<!--                FROM t_toc_settlement_receive_bill_cost_item t1-->
<!--                LEFT JOIN t_toc_settlement_receive_bill t2 ON t1.bill_id = t2.id-->
<!--                WHERE-->
<!--                    t2.bu_id = #{buId}-->
<!--                    and t2.bill_status in ('02', '03', '04', '05')-->
<!--                <if test='"0".equals(type)' >-->
<!--                    and t1.order_code IN-->
<!--                </if>-->
<!--                <if test='"1".equals(type)' >-->
<!--                    and t1.external_code IN-->
<!--                </if>-->
<!--                <foreach collection="orderCodes" item="orderCode" separator="," open="(" close=")">-->
<!--                    #{orderCode}-->
<!--                </foreach>-->
<!--                and t1.temp_cost_bill_id is null-->
<!--                GROUP BY-->
<!--                    <if test='"0".equals(type)' >-->
<!--                        t1.order_code,-->
<!--                    </if>-->
<!--                    <if test='"1".equals(type)' >-->
<!--                        t1.external_code,-->
<!--                    </if>-->
<!--                    t1.platform_project_id,-->
<!--                    t1.bill_type) tt2-->
<!--            SET tt0.settlement_ori_cost = tt2.original_amount,-->
<!--                tt0.settlement_rmb_cost = tt2.rmb_amount,-->
<!--                tt0.settlement_code = tt2.codes,-->
<!--                tt0.settlement_item_id = tt2.itemIds,-->
<!--                tt0.settlement_date = tt2.settlement_date,-->
<!--                tt0.settlement_mark = IF (ABS(tt0.temporary_rmb_cost-tt2.rmb_amount) = 0, '2', '0'),-->
<!--                tt0.original_currency = tt2.settlement_currency-->
<!--            WHERE-->
<!--                <if test='"0".equals(type)' >-->
<!--                    tt0.order_code = tt2.order_code-->
<!--                </if>-->
<!--                <if test='"1".equals(type)' >-->
<!--                    tt0.external_code = tt2.external_code-->
<!--                </if>-->
<!--            AND tt0.platform_project_id = tt2.platform_project_id-->
<!--            AND tt0.order_type = tt2.bill_type-->
<!--            AND tt0.bu_id = #{buId}-->
<!--            AND tt0.settlement_code is null-->
<!--        </update>-->

        <update id="updateVerifyCostItems" >
            UPDATE t_toc_temporary_receive_bill_cost_item ttt0,
            (
            SELECT tt0.id,tt2.original_amount,tt2.rmb_amount,tt2.codes,tt2.itemIds,
                tt2.settlement_date,tt2.settlement_currency,tt2.bill_in_date
            from t_toc_temporary_receive_bill_cost_item tt0,
                (
                    SELECT
                    <if test='"0".equals(type)' >
                        t1.order_code,
                    </if>
                    <if test='"1".equals(type)' >
                        t1.external_code,
                    </if>
                    t1.platform_project_id,
                    t1.bill_type,
                    IF(bill_type = '1',original_amount ,- original_amount) original_amount,
                    IF (bill_type = '1',rmb_amount ,- rmb_amount) rmb_amount,
                    t2.`code` codes,
                    t1.id itemIds,
                    t2.settlement_date AS settlement_date,
                    t2.settlement_currency AS settlement_currency,
                    t2.bill_in_date as bill_in_date
                    FROM t_toc_settlement_receive_bill_cost_item t1
                    LEFT JOIN t_toc_settlement_receive_bill t2 ON t1.bill_id = t2.id
                    WHERE
                    t1.id in (
                        SELECT
                        a.id
                        FROM t_toc_settlement_receive_bill_cost_item a
                        LEFT JOIN t_toc_settlement_receive_bill b ON a.bill_id = b.id
                        WHERE
                        <if test='settlementId!=null' >
                            b.id = #{settlementId} and
                        </if>
                        b.merchant_id = #{merchantId}
                        and b.bu_id = #{buId}
                        and b.store_platform_code = #{storePlatformCode}
                        and b.bill_status in ('02', '03', '04', '05')
                        <if test='"0".equals(type)' >
                            and a.order_code IN
                        </if>
                        <if test='"1".equals(type)' >
                            and a.external_code IN
                        </if>
                        <foreach collection="orderCodes" item="orderCode" separator="," open="(" close=")">
                            #{orderCode}
                        </foreach>
                        and a.temp_cost_bill_id is null
                        GROUP BY
                        <if test='"0".equals(type)' >
                            a.order_code,
                        </if>
                        <if test='"1".equals(type)' >
                            a.external_code,
                        </if>
                        a.platform_project_id,
                        a.bill_type
                    )
                ) tt2
            WHERE
            <if test='"0".equals(type)' >
                tt0.order_code = tt2.order_code
            </if>
            <if test='"1".equals(type)' >
                tt0.external_code = tt2.external_code
            </if>
            AND tt0.platform_project_id = tt2.platform_project_id
            AND tt0.order_type = tt2.bill_type
            AND tt0.merchant_id = #{merchantId}
            AND tt0.bu_id = #{buId}
            AND tt0.store_platform_code = #{storePlatformCode}
            AND tt0.settlement_code is null
            AND tt0.id is not null
            group by tt0.external_code, tt0.platform_project_id, tt0.order_type
            )ttt1
            SET ttt0.settlement_ori_cost = ttt1.original_amount,
                ttt0.settlement_rmb_cost = ttt1.rmb_amount,
                ttt0.settlement_code = ttt1.codes,
                ttt0.settlement_item_id = ttt1.itemIds,
                ttt0.settlement_date = ttt1.settlement_date,
                ttt0.settlement_mark = IF (ABS(ttt0.temporary_rmb_cost-ttt1.rmb_amount) = 0, '2', '0'),
                ttt0.original_currency = ttt1.settlement_currency,
                ttt0.bill_in_date = ttt1.bill_in_date
            where  ttt0.id=ttt1.id
        </update>

        <select id="countByBillIds" resultType="map">
            select bill_id billId,
            SUM(temporary_rmb_cost) as temporaryRmbAmount,
            count(external_code) totalNum,
            SUM(IFNULL(write_off_amount, 0)+IFNULL(settlement_rmb_cost,0)) alreadyReceiveAmount,
            SUM(IFNULL(temporary_rmb_cost, 0)-IFNULL(write_off_amount, 0)-IFNULL(settlement_rmb_cost,0)) noSettlementAmount,
            SUM(IFNULL(adjustment_rmb_amount, 0)) adjustmentRmbAmount,
            count(if(settlement_mark='0',true,null)) noSettlementNum,
            max(settlement_date) settlementDate
            from t_toc_temporary_receive_bill_cost_item
            where bill_id in
            <foreach collection="billIds" item="billId" separator="," open="(" close=")">
                #{billId}
            </foreach>
            group by bill_id
        </select>

        <select id="summaryByDTO" resultType="TocTemporaryCostBillDTO" parameterType="TocTemporaryReceiveBillCostItemDTO">
            select merchant_id as merchantId,merchant_name as merchantName,month,shop_type_code as shopTypeCode,
            store_platform_code as storePlatformCode,shop_code as shopCode,shop_name as shopName,
            bu_id as buId, bu_name as buName,parent_brand_name as parentBrandName,platform_project_id as platformProjectId, platform_project_name as platformProjectName,
            SUM(temporary_rmb_cost) as totalReceiveAmount,
            count(external_code) totalReceiveNum,
            SUM(IFNULL(adjustment_rmb_amount, 0)) adjustmentRmbAmount,
            SUM(IFNULL(write_off_amount, 0)+IFNULL(settlement_rmb_cost,0)) alreadyReceiveAmount,
            SUM(temporary_rmb_cost-IFNULL(write_off_amount, 0)-IFNULL(settlement_rmb_cost,0)+IFNULL(adjustment_rmb_amount,0)) lastReceiveAmount,
            count(if(settlement_mark='0',true,null)) lastReceiveNum,
            max(settlement_date) settlementEndMonth
            from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where' />
            group by merchantId,merchant_name,`month`,shop_type_code,store_platform_code,
            shop_code,shop_name,bu_id,bu_name,parent_brand_name, platform_project_id
        </select>

        <select id="countPunchNum" resultType="java.lang.Integer">
            select
                count(t.external_code)*2
            from (SELECT external_code,
                         (SUM(IFNULL(temporary_rmb_cost,0))-SUM(IFNULL(settlement_rmb_cost,0))-sum(IFNULL(write_off_amount, 0))) amount
                  FROM
                      t_toc_temporary_receive_bill_cost_item
                  WHERE
                      bill_id = #{billId}
                    and settlement_mark = '0'
                  GROUP BY
                      external_code, platform_project_id) t
            where t.amount = 0
        </select>

        <update id="updateEndItemBill" >
            update t_toc_temporary_receive_bill_cost_item
            set write_off_amount = (IFNULL(temporary_rmb_cost, 0)-IFNULL(settlement_rmb_cost, 0)),
            settlement_mark = '1'
            where bill_id = #{billId}
            <if test='!"2".equals(punchType)' >
                and (external_code,platform_project_id) in
                (select
                    t.external_code,platform_project_id
                    from (SELECT external_code,platform_project_id,
                                 (SUM(IFNULL(temporary_rmb_cost,0))-SUM(IFNULL(settlement_rmb_cost,0))-sum(IFNULL(write_off_amount, 0))) amount
                          FROM t_toc_temporary_receive_bill_cost_item
                          WHERE bill_id = #{billId}
                          and settlement_mark = '0'
                          GROUP BY external_code, platform_project_id) t
                    <if test='"0".equals(punchType)' >
                        where t.amount = 0
                    </if>
                    <if test='"1".equals(punchType)' >
                        where  t.amount != 0
                    </if>)
            </if>
            <if test='"2".equals(punchType)' >
                and settlement_mark = '0'
            </if>
        </update>

        <select id="sumCostGroupByModel" resultType="TocTemporaryReceiveBillCostItemDTO" parameterType="TocTemporaryReceiveBillCostItemModel">
            select
                count(1), external_code, platform_project_id, order_type ,sum(temporary_rmb_cost) as temporaryRmbCost, GROUP_CONCAT(id) as ids
            from t_toc_temporary_receive_bill_cost_item
            <include refid='sql_where' />
            GROUP BY external_code, platform_project_id, order_type
            having count(1) > 1
        </select>

        <select id="getCostDiffItems" resultType="TocTemporaryReceiveBillCostItemDTO" parameterType="map">
            select
            count(1) as countNum, order_code, order_type, settlement_code, platform_project_id, sum(IFNULL(adjustment_rmb_amount, 0)) as adjustment_rmb_amount
            from t_toc_temporary_receive_bill_cost_item
            <include refid='dto_sql_where' />
            group by order_code,order_type,settlement_code,platform_project_id
            order by id desc
        </select>

        <update id="batchUpdateVerifyCostItemsByDiffItem" parameterType="java.util.List" >
            UPDATE t_toc_temporary_receive_bill_cost_item tt0
            <trim prefix="set" suffixOverrides=",">
                <foreach collection="diffItems" item="i" index="index">
                    <if test="i.adjustmentRmbAmount!=null">
                        tt0.settlement_mark = IF (ABS(tt0.temporary_rmb_cost-tt0.settlement_rmb_cost-#{i.adjustmentRmbAmount}) = 0, '2', '0')
                    </if>
                </foreach>
            </trim>
            WHERE
            <foreach collection="diffItems" item="i" index="index">
                tt0.order_code = #{i.orderCode}
                AND tt0.platform_project_id = #{i.platformProjectId}
                AND tt0.order_type = #{i.orderType}
                and tt0.settlement_code = #{i.settlementCode}
                and tt0.bu_id = #{i.buId}
            </foreach>
        </update>

        <update id="updateWithoutSettleItems" parameterType="java.util.List" >
            UPDATE t_toc_temporary_receive_bill_cost_item
            <trim prefix="set" suffixOverrides=",">
                <trim prefix="settlement_code =case" suffix="end,">
                    <foreach collection="list" item="i" index="index">
                        <if test="i.settlementCode!=null">
                            when id=#{i.id} then #{i.settlementCode}
                        </if>
                    </foreach>
                </trim>
            </trim>
            where
            <foreach collection="list" separator="or" item="i" index="index" >
                id=#{i.id}
            </foreach>
        </update>

        <update id="batchUpdateVerifyCostItemsByDiffItem2" parameterType="map" >
            UPDATE t_toc_temporary_receive_bill_cost_item tt0,
            (
            select order_code, order_type, settlement_code, platform_project_id,month,bu_id,
                sum(IFNULL(adjustment_rmb_amount, 0)) as adjustment_rmb_amount
            from t_toc_temporary_receive_bill_cost_item
            <where>
            <trim suffixOverrides='and'>
                external_code in
                <foreach collection="orderCodeList" item="orderCode" separator="," open="(" close=")">
                    #{orderCode}
                </foreach> and
                merchant_id = #{merchantId} and
                <if test="buId!=null">
                    bu_id = #{buId} and
                </if>
                store_platform_code = #{storePlatformCode} and
                order_type in ('2','3') and
            </trim>
            </where>
            group by order_code, order_type, settlement_code, platform_project_id, month, bu_id
            ) tt1
            <trim prefix="set" suffixOverrides=",">
                tt0.settlement_mark = IF (ABS(IFNULL(tt0.temporary_rmb_cost,0) - IFNULL(tt0.settlement_rmb_cost,0) - IFNULL(tt0.write_off_amount,0) + IFNULL(tt1.adjustment_rmb_amount,0)) = 0, '2', '0'),
                tt0.adjustment_rmb_amount = tt1.adjustment_rmb_amount
            </trim>
            WHERE
            tt0.order_code = tt1.order_code and tt0.platform_project_id = tt1.platform_project_id
            AND tt0.month = tt1.month AND tt0.bu_id = tt1.bu_id
            AND tt0.order_type = IF(tt1.order_type = '2', '0', '1')
            and tt0.settlement_code = tt1.settlement_code
            and tt0.merchant_id = #{merchantId}
            <if test="buId!=null">
                and tt0.bu_id = #{buId}
            </if>
            and tt0.store_platform_code = #{storePlatformCode}
            and tt0.external_code in
            <foreach collection="orderCodeList" item="orderCode" separator="," open="(" close=")">
                #{orderCode}
            </foreach>
            and tt0.settlement_mark != '2'
        </update>

        <select id="getUnVerifyCostItem" resultType="TocTemporaryReceiveBillCostItemDTO" parameterType="map">
            select
            t1.*
            from t_toc_temporary_receive_bill_cost_item t1
            left join t_toc_temporary_cost_bill t2 ON t1.bill_id = t2.id
            <where>
                <trim suffixOverrides='and'>
                    <if test='billId!=null' >
                        t1.bill_id = #{billId} and
                    </if>
                    t1.merchant_id = #{merchantId} and
                    <if test="buId!=null">
                        t1.bu_id = #{buId} and
                    </if>
                    t1.store_platform_code = #{storePlatformCode} and
                    t1.external_code in
                    <foreach collection="orderCodeList" item="orderCode" separator="," open="(" close=")">
                        #{orderCode}
                    </foreach>
                    and
                    <if test='settlementMark!=null and !"".equals(settlementMark)' >t1.settlement_mark= #{settlementMark} and </if>
                    t1.settlement_code is not null and
                    t2.settlement_status != '2'
                </trim>
            </where>
        </select>

        <select id="getUnVerifyCostWithoutSettlementItem" resultType="TocTemporaryReceiveBillCostItemDTO" parameterType="map">
            select
            t1.*
            from t_toc_temporary_receive_bill_cost_item t1
            left join t_toc_temporary_cost_bill t2 ON t1.bill_id = t2.id
            <where>
                <trim suffixOverrides='and'>
                    <if test='billId!=null' >
                    t1.bill_id = #{billId} and
                    </if>
                    t1.merchant_id = #{merchantId} and
                    <if test='buId!=null' >
                        t1.bu_id = #{buId} and
                    </if>
                    t1.store_platform_code = #{storePlatformCode} and
                    t1.external_code in
                    <foreach collection="orderCodeList" item="orderCode" separator="," open="(" close=")">
                        #{orderCode}
                    </foreach> and
                    settlement_code is null and
                    <if test='settlementMark!=null and !"".equals(settlementMark)' >t1.settlement_mark= #{settlementMark} and </if>
                    t2.settlement_status != '2' and
                </trim>
            </where>
        </select>

        <update id="updateAdjustmentByDTO" parameterType="TocTemporaryReceiveBillCostItemDTO" >
            UPDATE t_toc_temporary_receive_bill_cost_item
            set settlement_code = #{settlementCode},adjustment_rmb_amount = #{adjustmentRmbAmount},
            modify_date = now()
            <where>
                id = #{id}
            </where>
        </update>

        <update id="updateByMap" parameterType="map" >
            UPDATE t_toc_temporary_receive_bill_cost_item
            set adjustment_rmb_amount = #{adjustmentRmbAmount},
            settlement_code = null,
            settlement_mark = IF (ABS(IFNULL(temporary_rmb_cost,0) - IFNULL(settlement_rmb_cost,0) - IFNULL(write_off_amount,0) + IFNULL(adjustment_rmb_amount,0)) = 0, '2', '0'),
            modify_date = now()
            <where>
                <trim suffixOverrides='and'>
                settlement_code = #{settlementCode}
                </trim>
            </where>
        </update>
</mapper>