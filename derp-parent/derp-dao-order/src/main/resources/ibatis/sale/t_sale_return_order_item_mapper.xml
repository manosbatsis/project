<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.topideal.mapper.sale.SaleReturnOrderItemMapper'>

<!-- 关系映射 -->
    <resultMap id="SaleReturnOrderItemModelMap" type="SaleReturnOrderItemModel" >
            <result property="orderId" column="order_id" />
            <result property="returnBatchNo" column="return_batch_no" />
            <result property="contractNo" column="contract_no" />
            <result property="saleOrderId" column="sale_order_id" />
            <result property="inGoodsId" column="in_goods_id" />
            <result property="outGoodsId" column="out_goods_id" />
            <result property="price" column="price" />
            <result property="inGoodsCode" column="in_goods_code" />
            <result property="id" column="id" />
            <result property="barcode" column="barcode" />
            <result property="createDate" column="create_date" />
            <result property="saleOrderCode" column="sale_order_code" />
            <result property="brandName" column="brand_name" />
            <result property="modifyDate" column="modify_date" />
            <result property="outGoodsCode" column="out_goods_code" />
            <result property="inGoodsNo" column="in_goods_no" />
            <result property="outGoodsName" column="out_goods_name" />
            <result property="grossWeight" column="gross_weight" />
            <result property="netWeight" column="net_weight" />
            <result property="returnNum" column="return_num" />
            <result property="boxNo" column="box_no" />
            <result property="inGoodsName" column="in_goods_name" />
            <result property="creater" column="creater" />
            <result property="outGoodsNo" column="out_goods_no" />
            <result property="badGoodsNum" column="bad_goods_num" />
            <result property="poNo" column="po_no" />
            <result property="poDate" column="po_date" />
            <result property="seq" column="seq" />
            <result property="amount" column="amount" />
            <result property="taxPrice" column="tax_price" />
            <result property="taxAmount" column="tax_amount" />
            <result property="tax" column="tax" />
            <result property="taxRate" column="tax_rate" />
    </resultMap>

    <!-- 查询所有信息 -->
    <select id="list" resultMap='SaleReturnOrderItemModelMap' parameterType='SaleReturnOrderItemModel'>
        select <include refid='sql_columns' /> from t_sale_return_order_item  <include refid='sql_where' />
        order by seq
    </select>

    <!-- 查询所有信息 分页 -->
    <select id='listByPage' resultMap='SaleReturnOrderItemModelMap' parameterType='SaleReturnOrderItemModel'>
        select <include refid='sql_columns' /> from t_sale_return_order_item  <include refid='sql_where' />
    </select>

    <!-- 条件查询 -->
    <select id='get' resultMap='SaleReturnOrderItemModelMap' parameterType='SaleReturnOrderItemModel' >
        select <include refid='sql_columns' /> from t_sale_return_order_item  <include refid='sql_where' />
    </select>

    <!-- 新增数据 -->
    <insert id='insert' parameterType='SaleReturnOrderItemModel' keyProperty="id" useGeneratedKeys="true">
    INSERT INTO t_sale_return_order_item
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='orderId!=null' > order_id , </if>
                <if test='returnBatchNo!=null and !"".equals(returnBatchNo)' > return_batch_no , </if>
                <if test='contractNo!=null and !"".equals(contractNo)' > contract_no , </if>
                <if test='saleOrderId!=null  and !"".equals(saleOrderId)' > sale_order_id , </if>
                <if test='inGoodsId!=null' > in_goods_id , </if>
                <if test='outGoodsId!=null' > out_goods_id , </if>
                <if test='price!=null' > price , </if>
                <if test='inGoodsCode!=null and !"".equals(inGoodsCode)' > in_goods_code , </if>
                <if test='id!=null' > id , </if>
                <if test='barcode!=null and !"".equals(barcode)' > barcode , </if>
                <if test='createDate!=null' > create_date , </if>
                <if test='saleOrderCode!=null and !"".equals(saleOrderCode)' > sale_order_code , </if>
                <if test='brandName!=null and !"".equals(brandName)' > brand_name , </if>
                <if test='modifyDate!=null' > modify_date , </if>
                <if test='outGoodsCode!=null and !"".equals(outGoodsCode)' > out_goods_code , </if>
                <if test='inGoodsNo!=null and !"".equals(inGoodsNo)' > in_goods_no , </if>
                <if test='outGoodsName!=null and !"".equals(outGoodsName)' > out_goods_name , </if>
                <if test='grossWeight!=null' > gross_weight , </if>
                <if test='netWeight!=null' > net_weight , </if>
                <if test='returnNum!=null' > return_num , </if>
                <if test='boxNo!=null and !"".equals(boxNo)' > box_no , </if>
                <if test='inGoodsName!=null and !"".equals(inGoodsName)' > in_goods_name , </if>
                <if test='creater!=null' > creater , </if>
                <if test='outGoodsNo!=null and !"".equals(outGoodsNo)' > out_goods_no , </if>
                <if test='badGoodsNum!=null and !"".equals(badGoodsNum)' > bad_goods_num , </if>
                <if test='poNo!=null and !"".equals(poNo)' > po_no , </if>
                <if test='poDate!=null and !"".equals(poDate)' > po_date , </if>
                <if test='seq!=null' >seq , </if>
                <if test='amount!=null' >amount , </if>
                <if test='taxPrice!=null' >tax_price , </if>
                <if test='taxAmount!=null' >tax_amount , </if>
                <if test='tax!=null' >tax , </if>
                <if test='taxRate!=null' >tax_rate , </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='orderId!=null' > #{orderId} , </if>
                <if test='returnBatchNo!=null and !"".equals(returnBatchNo)' > #{returnBatchNo} , </if>
                <if test='contractNo!=null and !"".equals(contractNo)' > #{contractNo} , </if>
                <if test='saleOrderId!=null and !"".equals(saleOrderId)' > #{saleOrderId} , </if>
                <if test='inGoodsId!=null' > #{inGoodsId} , </if>
                <if test='outGoodsId!=null' > #{outGoodsId} , </if>
                <if test='price!=null' > #{price} , </if>
                <if test='inGoodsCode!=null and !"".equals(inGoodsCode)' > #{inGoodsCode} , </if>
                <if test='id!=null' > #{id} , </if>
                <if test='barcode!=null and !"".equals(barcode)' > #{barcode} , </if>
                <if test='createDate!=null' > #{createDate} , </if>
                <if test='saleOrderCode!=null and !"".equals(saleOrderCode)' > #{saleOrderCode} , </if>
                <if test='brandName!=null and !"".equals(brandName)' > #{brandName} , </if>
                <if test='modifyDate!=null' > #{modifyDate} , </if>
                <if test='outGoodsCode!=null and !"".equals(outGoodsCode)' > #{outGoodsCode} , </if>
                <if test='inGoodsNo!=null and !"".equals(inGoodsNo)' > #{inGoodsNo} , </if>
                <if test='outGoodsName!=null and !"".equals(outGoodsName)' > #{outGoodsName} , </if>
                <if test='grossWeight!=null' > #{grossWeight} , </if>
                <if test='netWeight!=null' > #{netWeight} , </if>
                <if test='returnNum!=null' > #{returnNum} , </if>
                <if test='boxNo!=null and !"".equals(boxNo)' > #{boxNo} , </if>
                <if test='inGoodsName!=null and !"".equals(inGoodsName)' > #{inGoodsName} , </if>
                <if test='creater!=null' > #{creater} , </if>
                <if test='outGoodsNo!=null and !"".equals(outGoodsNo)' > #{outGoodsNo} , </if>
                <if test='badGoodsNum!=null and !"".equals(badGoodsNum)' > #{badGoodsNum} , </if>
                <if test='poNo!=null and !"".equals(poNo)' > #{poNo} , </if>
                <if test='poDate!=null and !"".equals(poDate)' > #{poDate} , </if>
                <if test='seq!=null' > #{seq} , </if>
                <if test='amount!=null' > #{amount} , </if>
                <if test='taxPrice!=null' > #{taxPrice} , </if>
                <if test='taxAmount!=null' > #{taxAmount} , </if>
                <if test='tax!=null' > #{tax} , </if>
                <if test='taxRate!=null' > #{taxRate} , </if>
        </trim>
    </insert>

    <!-- 修改数据 -->
    <update id='update' parameterType='SaleReturnOrderItemModel' keyProperty="id" useGeneratedKeys="true">
    UPDATE  t_sale_return_order_item SET
        <trim  suffixOverrides=",">
                <if test='orderId!=null' > order_id= #{orderId} , </if>
                <if test='returnBatchNo!=null and !"".equals(returnBatchNo)' >return_batch_no= #{returnBatchNo} , </if>
                <if test='contractNo!=null and !"".equals(contractNo)' >contract_no= #{contractNo} , </if>
                <if test='saleOrderId!=null and !"".equals(saleOrderId)' > sale_order_id= #{saleOrderId} , </if>
                <if test='inGoodsId!=null' > in_goods_id= #{inGoodsId} , </if>
                <if test='outGoodsId!=null' > out_goods_id= #{outGoodsId} , </if>
                <if test='price!=null' > price= #{price} , </if>
                <if test='inGoodsCode!=null and !"".equals(inGoodsCode)' >in_goods_code= #{inGoodsCode} , </if>
                <if test='id!=null' > id= #{id} , </if>
                <if test='barcode!=null and !"".equals(barcode)' >barcode= #{barcode} , </if>
                <if test='createDate!=null' > create_date= #{createDate} , </if>
                <if test='saleOrderCode!=null and !"".equals(saleOrderCode)' >sale_order_code= #{saleOrderCode} , </if>
                <if test='brandName!=null and !"".equals(brandName)' >brand_name= #{brandName} , </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} , </if>
                <if test='outGoodsCode!=null and !"".equals(outGoodsCode)' >out_goods_code= #{outGoodsCode} , </if>
                <if test='inGoodsNo!=null and !"".equals(inGoodsNo)' >in_goods_no= #{inGoodsNo} , </if>
                <if test='outGoodsName!=null and !"".equals(outGoodsName)' >out_goods_name= #{outGoodsName} , </if>
                <if test='grossWeight!=null' > gross_weight= #{grossWeight} , </if>
                <if test='netWeight!=null' > net_weight= #{netWeight} , </if>
                <if test='returnNum!=null' > return_num= #{returnNum} , </if>
                <if test='boxNo!=null and !"".equals(boxNo)' >box_no= #{boxNo} , </if>
                <if test='inGoodsName!=null and !"".equals(inGoodsName)' >in_goods_name= #{inGoodsName} , </if>
                <if test='creater!=null' > creater= #{creater} , </if>
                <if test='outGoodsNo!=null and !"".equals(outGoodsNo)' >out_goods_no= #{outGoodsNo} , </if>
                <if test='badGoodsNum!=null and !"".equals(badGoodsNum)' >bad_goods_num= #{badGoodsNum} , </if>
                <if test='poNo!=null and !"".equals(poNo)' >po_no= #{poNo} , </if>
                <if test='poDate!=null and !"".equals(poDate)' >po_date= #{poDate} , </if>
                <if test='seq!=null' > seq= #{seq} , </if>
                <if test='amount!=null' > amount= #{amount} , </if>
                <if test='taxPrice!=null' > tax_price= #{taxPrice} , </if>
                <if test='taxAmount!=null' > tax_amount= #{taxAmount} , </if>
                <if test='tax!=null' > tax= #{tax} , </if>
                <if test='taxRate!=null' > tax_rate= #{taxRate} , </if>
        </trim>
        <where>
            id=#{id}
        </where>
    </update>

    <!-- 删除数据 -->
    <delete id='del' parameterType='java.lang.Long'>
        delete from t_sale_return_order_item  where id=#{id}
    </delete>

    <!-- 批量删除数据 -->
    <delete id='batchDel' parameterType='java.util.ArrayList'>
        delete from t_sale_return_order_item where id in
        <foreach collection='list' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
    </delete>

    <!-- 表字段 -->
    <sql id='sql_columns'>
        order_id,
        return_batch_no,
        contract_no,
        sale_order_id,
        in_goods_id,
        out_goods_id,
        price,
        in_goods_code,
        id,
        barcode,
        create_date,
        sale_order_code,
        brand_name,
        modify_date,
        out_goods_code,
        in_goods_no,
        out_goods_name,
        gross_weight,
        net_weight,
        return_num,
        box_no,
        in_goods_name,
        creater,
        out_goods_no,
        bad_goods_num,
        po_no,
        po_date,
        seq,
        amount,
        tax_price,
        tax_amount,
        tax,
        tax_rate
    </sql>

    <!-- 查询条件 -->
    <sql id='sql_where'>
        <where>
            <trim suffixOverrides='and'>
                <if test='orderId!=null' > order_id= #{orderId} and </if>
                <if test='returnBatchNo!=null and !"".equals(returnBatchNo)' >return_batch_no= #{returnBatchNo} and </if>
                <if test='contractNo!=null and !"".equals(contractNo)' >contract_no= #{contractNo} and </if>
                <if test='saleOrderId!=null and !"".equals(saleOrderId)' > sale_order_id= #{saleOrderId} and </if>
                <if test='inGoodsId!=null' > in_goods_id= #{inGoodsId} and </if>
                <if test='outGoodsId!=null' > out_goods_id= #{outGoodsId} and </if>
                <if test='price!=null' > price= #{price} and </if>
                <if test='inGoodsCode!=null and !"".equals(inGoodsCode)' >in_goods_code= #{inGoodsCode} and </if>
                <if test='id!=null' > id= #{id} and </if>
                <if test='barcode!=null and !"".equals(barcode)' >barcode= #{barcode} and </if>
                <if test='createDate!=null' > create_date= #{createDate} and </if>
                <if test='saleOrderCode!=null and !"".equals(saleOrderCode)' >sale_order_code= #{saleOrderCode} and </if>
                <if test='brandName!=null and !"".equals(brandName)' >brand_name= #{brandName} and </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                <if test='outGoodsCode!=null and !"".equals(outGoodsCode)' >out_goods_code= #{outGoodsCode} and </if>
                <if test='inGoodsNo!=null and !"".equals(inGoodsNo)' >in_goods_no= #{inGoodsNo} and </if>
                <if test='outGoodsName!=null and !"".equals(outGoodsName)' >out_goods_name= #{outGoodsName} and </if>
                <if test='grossWeight!=null' > gross_weight= #{grossWeight} and </if>
                <if test='netWeight!=null' > net_weight= #{netWeight} and </if>
                <if test='returnNum!=null' > return_num= #{returnNum} and </if>
                <if test='boxNo!=null and !"".equals(boxNo)' >box_no= #{boxNo} and </if>
                <if test='inGoodsName!=null and !"".equals(inGoodsName)' >in_goods_name= #{inGoodsName} and </if>
                <if test='creater!=null' > creater= #{creater} and </if>
                <if test='outGoodsNo!=null and !"".equals(outGoodsNo)' >out_goods_no= #{outGoodsNo} and </if>
                <if test='badGoodsNum!=null and !"".equals(badGoodsNum)' >bad_goods_num= #{badGoodsNum} and </if>
                <if test='poNo!=null and !"".equals(poNo)' >binary po_no= #{poNo} and </if>
                <if test='poDate!=null and !"".equals(poDate)' >po_date= #{poDate} and </if>
                <if test='seq!=null' > seq= #{seq} and </if>
                <if test='amount!=null' > amount= #{amount} and </if>
                <if test='taxPrice!=null' > tax_price= #{taxPrice} and </if>
                <if test='taxAmount!=null' > tax_amount= #{taxAmount} and </if>
                <if test='tax!=null' > tax= #{tax} and </if>
                <if test='taxRate!=null' > tax_rate= #{taxRate} and </if>
            </trim>
        </where>
    </sql>

	<!--自定义SQL-->
	<!-- 检查商品是否使用 -->
    <select id='checkGoodsIsUse' resultType="java.lang.Integer" parameterType="java.lang.Long">
        select
        	count(*)
        from t_sale_return_order_item t1
        left join t_sale_return_order t2 on t1.order_id = t2.id
        where t2.status in ('001','003','012') and (t1.in_goods_id = #{id} or t1.out_goods_id = #{id})
    </select>


    <!--通过订单ID查询信息  -->
    <select id='searchByOrderId' resultMap='SaleReturnOrderItemModelMap' parameterType='java.lang.Long' >
        select * from t_sale_return_order_item where order_id= #{orderId}
    </select>

        <!-- 根据PO单号+商品货号+订单类型查询退货记录 -->
    <select id='searchByInfo' resultMap='SaleReturnOrderItemModelMap' parameterType='SaleReturnOrderItemModel'>
        select * from t_sale_return_order_item where po_no= #{poNo} and out_goods_no= #{outGoodsNo}
    </select>
        <!-- 查询所有信息 -->
    <select id="listSaleReturnOrderItemDTO" resultType='SaleReturnOrderItemDTO' parameterType='SaleReturnOrderItemDTO'>
        select <include refid='sql_columns' /> from t_sale_return_order_item  <include refid='sql_where' />
        order by seq
    </select>

	<select id="getListByBesidesIds" resultMap='SaleReturnOrderItemModelMap' parameterType='java.util.ArrayList'>
    	select id from t_sale_return_order_item where
    	order_id = #{orderId}
        <if test="itemIds != null">
	        and id not in
	        <foreach collection='itemIds' item='id' separator=',' open='(' close=')'>
	            #{id}
	        </foreach>
        </if>
    </select>
        <!-- 批量删除数据,根据表头ID删除表体 -->
    <delete id='delBesidesIds' parameterType='java.util.ArrayList'>
        delete from t_sale_return_order_item where order_id = #{orderId}
        <if test="itemIds != null">
	        and id not in
	        <foreach collection='itemIds' item='id' separator=',' open='(' close=')'>
	            #{id}
	        </foreach>
        </if>
    </delete>
    <!-- 查询表体所有信息 -->
    <select id="getSaleReturnOrderItem" resultType='SaleReturnOrderItemDTO' parameterType='SaleReturnOrderItemDTO'>
        select
			<include refid='sql_columns' />
        from t_sale_return_order_item  <include refid='sql_where' />
        order by seq
    </select>

    <select id="statisticsBySaleCode" resultMap="SaleReturnOrderItemModelMap" >
        select
            si.order_id,
            si.return_batch_no,
            si.contract_no,
            si.in_goods_id,
            si.out_goods_id,
            si.price,
            si.in_goods_code,
            si.id,
            si.barcode,
            si.create_date,
            s.sale_order_rel_code sale_order_code,
            si.brand_name,
            si.modify_date,
            si.out_goods_code,
            si.in_goods_no,
            si.out_goods_name,
            si.gross_weight,
            si.net_weight,
            si.return_num,
            si.box_no,
            si.in_goods_name,
            si.creater,
            si.out_goods_no,
            si.bad_goods_num
        from t_sale_return_order s LEFT JOIN t_sale_return_order_item si on s.id = si.order_id
        <where>
            <trim suffixOverrides='or' prefix="(" suffix=")">
                <foreach collection='saleCodeList' item='code'>
                    s.sale_order_rel_code like CONCAT('%',#{code},'%') or
                </foreach>
            </trim>
        </where>
        GROUP BY s.sale_order_rel_code
    </select>

    <select id="statisticsByPoNos" resultMap="SaleReturnOrderItemModelMap" >
        select
        <include refid='sql_columns' />
        from t_sale_return_order_item
        <where>
            <trim suffixOverrides='or' prefix="(" suffix=")">
                <foreach collection='poNoList' item='poNo'>
                    po_no like CONCAT('%',#{poNo},'%') or
                </foreach>
            </trim>
        </where>
    </select>
    <!-- 获取销售退商品弹窗-->
    <select id="getSalePopupListByPage" resultType="SaleReturnOrderItemDTO" parameterType="SaleReturnOrderItemDTO">
		SELECT
			t1.order_id AS saleOrderId,
			t1.goods_id AS inGoodsId,
			t1.goods_no AS inGoodsNo,
			t2.goods_code AS inGoodsCode,
			t1.goods_name AS inGoodsName,
			t2.price AS price,
			t2.tax_price AS taxPrice,
			t2.tax_rate AS taxRate,
			sum(( t1.shelf_num + t1.damaged_num + t1.lack_num ) * t2.price ) AS amount,
			sum( t2.tax ) AS tax,
			sum(( t1.shelf_num + t1.damaged_num + t1.lack_num ) * t2.tax_price ) AS taxAmount,
			sum( t1.shelf_num + t1.damaged_num + t1.lack_num ) AS returnNum,
			t2.commbarcode,
			t1.po_no AS poNo,
			t1.barcode
		FROM
			t_sale_shelf t1 LEFT JOIN t_sale_order_item t2 ON t1.order_id=t2.order_id AND t1.goods_no = t2.goods_no
			where t2.order_id =  #{saleOrderId}
               <trim suffixOverrides='and'>
                 <if test='unNeedIds!=null' > and t1.id not in
	                 <foreach collection="unNeedIds.split(',')" open="(" close=")" separator="," item="unNeedId">
	                     #{unNeedId}
	                 </foreach>	and
                  </if>
                  <if test='inGoodsId!=null' > t2.goods_id= #{inGoodsId} and </if>
                  <if test='inGoodsCode!=null and !"".equals(inGoodsCode)' >t2.goods_code= #{inGoodsCode} and </if>
                  <if test='inGoodsName!=null and !"".equals(inGoodsName)' >t2.goods_name= #{inGoodsName} and </if>
                  <if test='inGoodsNo!=null and !"".equals(inGoodsNo)' >t2.goods_no= #{inGoodsNo} and </if>
                  <if test='barcode!=null and !"".equals(barcode)' >t2.barcode= #{barcode} and </if>
                  <if test='poNo!=null and !"".equals(poNo)' >binary t1.po_no= #{poNo} and </if>
               </trim>
              group by t1.order_id,	t1.goods_id,t1.po_no
	</select>

    <select id="listByOrderIds" resultMap="SaleReturnOrderItemModelMap" >
        select <include refid='sql_columns' />
        from t_sale_return_order_item
        where order_id in
        <foreach collection='orderIds' item='orderId' separator=',' open='(' close=')'>
            #{orderId}
        </foreach>
    </select>
</mapper>
