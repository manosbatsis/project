<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.topideal.mapper.storage.AdjustmentInventoryMapper'>

   <!-- 关系映射 -->
    <resultMap id="AdjustmentInventoryModelMap" type="AdjustmentInventoryModel" >
                <result property="depotName" column="depot_name" />
                <result property="createUserId" column="create_user_id" />
                <result property="code" column="code" />
                <result property="months" column="months" />
                <result property="depotId" column="depot_id" />
                <result property="sourceTime" column="source_time" />
                <result property="remark" column="remark" />
                <result property="merchantName" column="merchant_name" />
                <result property="sourceCode" column="source_code" />
                <result property="createUsername" column="create_username" />
                <result property="merchantId" column="merchant_id" />
                <result property="createDate" column="create_date" />
                <result property="modifyDate" column="modify_date" />
                <result property="model" column="model" />
                <result property="id" column="id" />
                <result property="adjustmentTime" column="adjustment_time" />
                <result property="status" column="status" />
                <result property="poNo" column="po_no" />
                <result property="source" column="source" />
                <result property="currency" column="currency" />
                <result property="buName" column="bu_name" />
                <result property="buId" column="bu_id" />
                <result property="confirmUserId" column="confirm_user_id" />
                <result property="confirmUsername" column="confirm_username" />
                <result property="confirmTime" column="confirm_time" />
    </resultMap>

    <!-- 查询所有信息 -->
    <select id="list" resultMap='AdjustmentInventoryModelMap' parameterType='AdjustmentInventoryModel'>
        select <include refid='sql_columns' /> from s_adjustment_inventory  <include refid='sql_where' />
    </select>

    <!-- 查询所有信息 分页 -->
    <select id='listByPage' resultMap='AdjustmentInventoryModelMap' parameterType='AdjustmentInventoryModel'>
        select <include refid='sql_columns' /> from s_adjustment_inventory  <include refid='sql_where' />
    </select>

    <!-- 条件查询 -->
    <select id='get' resultMap='AdjustmentInventoryModelMap' parameterType='AdjustmentInventoryModel' >
        select <include refid='sql_columns' /> from s_adjustment_inventory  <include refid='sql_where' />
    </select>

    <!-- 新增数据 -->
    <insert id='insert' parameterType='AdjustmentInventoryModel' keyProperty="id" useGeneratedKeys="true">
    INSERT INTO s_adjustment_inventory
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='depotName!=null and !"".equals(depotName)' > depot_name , </if>
                <if test='createUserId!=null' > create_user_id , </if>
                <if test='code!=null and !"".equals(code)' > code , </if>
                <if test='months!=null and !"".equals(months)' > months , </if>
                <if test='depotId!=null' > depot_id , </if>
                <if test='sourceTime!=null' > source_time , </if>
                <if test='remark!=null and !"".equals(remark)' > remark , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' > merchant_name , </if>
                <if test='sourceCode!=null and !"".equals(sourceCode)' > source_code , </if>
                <if test='createUsername!=null and !"".equals(createUsername)' > create_username , </if>
                <if test='merchantId!=null' > merchant_id , </if>
                <if test='createDate!=null' > create_date , </if>
                <if test='modifyDate!=null' > modify_date , </if>
                <if test='model!=null and !"".equals(model)' > model , </if>
                <if test='id!=null' > id , </if>
                <if test='adjustmentTime!=null' > adjustment_time , </if>
                <if test='status!=null and !"".equals(status)' > status , </if>
                <if test='poNo!=null and !"".equals(poNo)' > po_no , </if>
                <if test='source!=null and !"".equals(source)' > source , </if>
                <if test='currency!=null and !"".equals(currency)' > currency , </if>
                <if test='buName!=null and !"".equals(buName)' > bu_name , </if>
                <if test='buId!=null' >bu_id , </if>
                <if test='confirmUserId!=null' >confirm_user_id , </if>
                <if test='confirmUsername!=null and !"".equals(confirmUsername)' > confirm_username , </if>
                <if test='confirmTime!=null' >confirm_time , </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='depotName!=null and !"".equals(depotName)' > #{depotName} , </if>
                <if test='createUserId!=null' > #{createUserId} , </if>
                <if test='code!=null and !"".equals(code)' > #{code} , </if>
                <if test='months!=null and !"".equals(months)' > #{months} , </if>
                <if test='depotId!=null' > #{depotId} , </if>
                <if test='sourceTime!=null' > #{sourceTime} , </if>
                <if test='remark!=null and !"".equals(remark)' > #{remark} , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' > #{merchantName} , </if>
                <if test='sourceCode!=null and !"".equals(sourceCode)' > #{sourceCode} , </if>
                <if test='createUsername!=null and !"".equals(createUsername)' > #{createUsername} , </if>
                <if test='merchantId!=null' > #{merchantId} , </if>
                <if test='createDate!=null' > #{createDate} , </if>
                <if test='modifyDate!=null' > #{modifyDate} , </if>
                <if test='model!=null and !"".equals(model)' > #{model} , </if>
                <if test='id!=null' > #{id} , </if>
                <if test='adjustmentTime!=null' > #{adjustmentTime} , </if>
                <if test='status!=null and !"".equals(status)' > #{status} , </if>
                <if test='poNo!=null and !"".equals(poNo)' > #{poNo} , </if>
                <if test='source!=null and !"".equals(source)' > #{source} , </if>
                <if test='currency!=null and !"".equals(currency)' > #{currency} , </if>
                <if test='buName!=null and !"".equals(buName)' > #{buName} , </if>
                <if test='buId!=null' > #{buId} , </if>
                <if test='confirmUserId!=null' > #{confirmUserId} , </if>
                <if test='confirmUsername!=null and !"".equals(confirmUsername)' > #{confirmUsername} , </if>
                <if test='confirmTime!=null' > #{confirmTime} , </if>
        </trim>
    </insert>

    <!-- 修改数据 -->
    <update id='update' parameterType='AdjustmentInventoryModel' keyProperty="id" useGeneratedKeys="true">
    UPDATE  s_adjustment_inventory SET
        <trim  suffixOverrides=",">
                <if test='depotName!=null and !"".equals(depotName)' >depot_name= #{depotName} , </if>
                <if test='createUserId!=null' > create_user_id= #{createUserId} , </if>
                <if test='code!=null and !"".equals(code)' >code= #{code} , </if>
                <if test='months!=null and !"".equals(months)' >months= #{months} , </if>
                <if test='depotId!=null' > depot_id= #{depotId} , </if>
                <if test='sourceTime!=null' > source_time= #{sourceTime} , </if>
                <if test='remark!=null and !"".equals(remark)' >remark= #{remark} , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} , </if>
                <if test='sourceCode!=null and !"".equals(sourceCode)' >source_code= #{sourceCode} , </if>
                <if test='createUsername!=null and !"".equals(createUsername)' >create_username= #{createUsername} , </if>
                <if test='merchantId!=null' > merchant_id= #{merchantId} , </if>
                <if test='createDate!=null' > create_date= #{createDate} , </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} , </if>
                <if test='model!=null and !"".equals(model)' >model= #{model} , </if>
                <if test='adjustmentTime!=null' > adjustment_time= #{adjustmentTime} , </if>
                <if test='status!=null and !"".equals(status)' >status= #{status} , </if>
                <if test='poNo!=null and !"".equals(poNo)' >po_no= #{poNo} , </if>
                <if test='source!=null and !"".equals(source)' >source= #{source} , </if>
                <if test='currency!=null and !"".equals(currency)' >currency= #{currency} , </if>
                <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} , </if>
                <if test='buId!=null' > bu_id= #{buId} , </if>
                <if test='confirmUserId!=null' > confirm_user_id= #{confirmUserId} , </if>
                <if test='confirmUsername!=null and !"".equals(confirmUsername)' >confirm_username= #{confirmUsername} , </if>
                <if test='confirmTime!=null' > confirm_time= #{confirmTime} , </if>
        </trim>
        <where>
            id=#{id}
        </where>
    </update>

    <!-- 删除数据 -->
    <delete id='del' parameterType='java.lang.Long'>
        delete from s_adjustment_inventory  where id=#{id}
    </delete>

    <!-- 批量删除数据 -->
    <delete id='batchDel' parameterType='java.util.ArrayList'>
        delete from s_adjustment_inventory where id in
        <foreach collection='list' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
    </delete>

    <!-- 表字段 -->
    <sql id='sql_columns'>
        depot_name,
        create_user_id,
        code,
        months,
        depot_id,
        source_time,
        remark,
        merchant_name,
        source_code,
        create_username,
        merchant_id,
        create_date,
        modify_date,
        model,
        id,
        adjustment_time,
        status,
        po_no,
        source,
        currency,
        bu_name,
        bu_id,
        confirm_user_id,
        confirm_username,
        confirm_time
    </sql>

    <!-- 查询条件 -->
    <sql id='sql_where'>
        <where>
            <trim suffixOverrides='and'>
                <if test='depotName!=null and !"".equals(depotName)' >depot_name= #{depotName} and </if>
                <if test='createUserId!=null' > create_user_id= #{createUserId} and </if>
                <if test='code!=null and !"".equals(code)' >code= #{code} and </if>
                <if test='months!=null and !"".equals(months)' >months= #{months} and </if>
                <if test='depotId!=null' > depot_id= #{depotId} and </if>
                <if test='sourceTime!=null' > source_time= #{sourceTime} and </if>
                <if test='remark!=null and !"".equals(remark)' >remark= #{remark} and </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                <if test='sourceCode!=null and !"".equals(sourceCode)' >source_code= #{sourceCode} and </if>
                <if test='createUsername!=null and !"".equals(createUsername)' >create_username= #{createUsername} and </if>
                <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                <if test='createDate!=null' > create_date= #{createDate} and </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                <if test='model!=null and !"".equals(model)' >model= #{model} and </if>
                <if test='id!=null' > id= #{id} and </if>
                <if test='adjustmentTime!=null' > adjustment_time= #{adjustmentTime} and </if>
                <if test='status!=null and !"".equals(status)' >status= #{status} and </if>
                <if test='poNo!=null and !"".equals(poNo)' >po_no= #{poNo} and </if>
                <if test='source==null or "".equals(source)' >source= #{source} and </if>
                <if test='status==null or "".equals(status)' >status!='006' and </if>
                <if test='currency!=null and !"".equals(currency)' >currency= #{currency} and </if>
                <if test='buName!=null and !"".equals(buName)' > bu_name=#{buName} and  </if>
                <if test='buId!=null' > bu_id= #{buId} and </if>
                <if test='confirmUserId!=null' > confirm_user_id= #{confirmUserId} and </if>
                <if test='confirmUsername!=null and !"".equals(confirmUsername)' >confirm_username= #{confirmUsername} and </if>
                <if test='confirmTime!=null' > confirm_time= #{confirmTime} and </if>
            </trim>
        </where>
    </sql>

	<!--自定义SQL-->
    <!-- 根据创建修改时间查询-->
    <select id='getOutDepotOrderByTime' resultType='map' parameterType='map'>
        select t.id,t.code,t.source_code,date_format(t.source_time,'%Y-%m-%d %H:%i:%S') as source_time,t.status,
			m.topideal_code,d.type,d.code AS dcode,d.id as depot_id,d.depot_code,d.name
		from s_adjustment_inventory t
		left join s_adjustment_inventory_item i on t.id=i.t_adjustment_inventory_id
		left join st_merchant_info m ON t.merchant_id=m.id
		left join st_depot_info d ON t.depot_id=d.id
		where t.merchant_id=#{merchantId} and t.status in('019','006') and i.type='0' 
		and i.bu_id in (
						SELECT id from st_business_unit WHERE `code` IN (	
						'E071100',
						'I020300',
						'I020200'
						)
					)
		and model=#{model}
		      and (t.create_date&gt;=#{startTime} OR t.modify_date&gt;=#{startTime} OR i.create_date&gt;=#{startTime} OR i.modify_date&gt;=#{startTime})
			  and (t.create_date&lt;=#{endTime} OR t.modify_date&lt;=#{endTime} OR i.create_date&lt;=#{endTime} OR i.modify_date&lt;=#{endTime})
		group by t.id,t.code,t.source_code,t.source_time,t.status,
			     m.topideal_code,d.type,d.code,d.id,d.depot_code,d.name 
	    order by t.id
	    limit #{startIndex},#{pageSize}
    </select>
     <!-- 根据创建修改时间查询统计数量-->
    <select id='getOutDepotOrderByTimeCount' resultType='java.lang.Integer' parameterType='map'>
        select count(*) as total_count from (
	        select t.id,t.code,t.source_code,date_format(t.source_time,'%Y-%m-%d %H:%i:%S') as source_time,t.status,
				m.topideal_code,d.type,d.code AS dcode,d.depot_code,d.name
			from s_adjustment_inventory t
			left join s_adjustment_inventory_item i on t.id=i.t_adjustment_inventory_id
			left join st_merchant_info m ON t.merchant_id=m.id
			left join st_depot_info d ON t.depot_id=d.id
			where t.merchant_id=#{merchantId} and t.status in('019','006') and i.type='0'
			and i.bu_id in (
						SELECT id from st_business_unit WHERE `code` IN (	
						'E071100',
						'I020300',
						'I020200'
						)
					)
			 and model=#{model}
			      and (t.create_date&gt;=#{startTime} OR t.modify_date&gt;=#{startTime} OR i.create_date&gt;=#{startTime} OR i.modify_date&gt;=#{startTime})
				  and (t.create_date&lt;=#{endTime} OR t.modify_date&lt;=#{endTime} OR i.create_date&lt;=#{endTime} OR i.modify_date&lt;=#{endTime})
			group by t.id,t.code,t.source_code,t.source_time,t.status,
				     m.topideal_code,d.type,d.depot_code,d.name 
	    ) c
    </select>
    <!-- 按 出库单查询出库商品-->
    <select id='getOutDepotItemByCodes' resultType='map' parameterType="java.util.List">
        select t.code,i.goods_no,i.goods_name,i.tallying_unit,
		       b.name AS brank_name,m.commbarcode,t.remark,SUM(i.adjust_total) AS total_num
		from s_adjustment_inventory_item i
		left join s_adjustment_inventory t ON i.t_adjustment_inventory_id=t.id
		left join st_merchandise_info m ON i.goods_id=m.id
		left join st_brand b ON m.brand_id=b.id
		where i.type='0' and t.code in
		   <foreach collection='list' item='code' separator=',' open='(' close=')'>
            #{code}
           </foreach>
		group by t.code,i.goods_no,i.goods_name,i.tallying_unit,
		       b.name,m.commbarcode,t.remark
    </select>
    <!-- 查询出库单批次数据-->
    <select id='getItemBatchByCode' resultType='map' parameterType='map'>
        select i.old_batch_no,i.is_damage,date_format(t.source_time,'%Y-%m-%d') AS source_time,
               date_format(i.production_date,'%Y-%m-%d') AS production_date, 
			   date_format(i.overdue_date,'%Y-%m-%d') AS overdue_date,SUM(i.adjust_total) AS adjust_total 
		from s_adjustment_inventory t,s_adjustment_inventory_item i 
		where i.t_adjustment_inventory_id=t.id AND t.code=#{code} AND i.goods_no=#{goodsNo} AND i.type='0'
		<if test='unit==null or "".equals(unit)'> and (i.tallying_unit is null or i.tallying_unit='')</if>
	    <if test='unit!=null and !"".equals(unit)'> and i.tallying_unit=#{unit}</if>
		group by i.old_batch_no,i.is_damage,t.source_time,i.production_date,i.overdue_date  
    </select>
    
    
    
    
    
    
    
    	<!-- 对外api分页查询的数据 -->
	 <select id='getListPage' resultType="map" >
   		SELECT  
	        distinct t1.id,
	        t1.create_user_id,
	        t1.`code`,
	        t1.months,
	        t1.source_time,
	        t1.remark,
	        t1.merchant_name,
	        t1.source_code,
	        t1.create_username,
	        t1.merchant_id,
	        t1.create_date,
	        t1.modify_date,
	        t1.model,
	        t1.adjustment_time,
	        t1.`status`,
			t2.type as depot_type,
			t2.`code` as depot_code,
			t2.depot_code as depot_code1,
			t2.`name` as depot_name,
			t2.id as depot_id
		from s_adjustment_inventory t1
		LEFT JOIN s_adjustment_inventory_item t3 ON t3.t_adjustment_inventory_id=t1.id
		LEFT JOIN st_depot_info t2 ON t1.depot_id=t2.id
		
		WHERE  t1.merchant_id= #{merchantId} 
		AND t1.model=#{inventoryType}
		AND (t1.status='019' or t1.status='006')
		AND t3.type='1'
		and t3.bu_id in (
			SELECT id from st_business_unit WHERE `code` IN (	
				'E071100',
				'I020300',
				'I020200'
				)
		)	
		AND (t1.create_date &gt;= #{startTime} OR t1.modify_date &gt;= #{startTime})
		AND  (t1.create_date &lt;= #{endTime} OR t1.modify_date &lt;= #{endTime})
	   limit #{startIndex},#{pageSize}

    </select>   
    <!-- 查询总数 -->
    <select id='getListCount' resultType="java.lang.Integer" >
    	SELECT count(DISTINCT t1.id)
    	from s_adjustment_inventory t1
    	LEFT JOIN s_adjustment_inventory_item t3 ON t3.t_adjustment_inventory_id=t1.id
		LEFT JOIN st_depot_info t2 ON t1.depot_id=t2.id
		
		WHERE  t1.merchant_id= #{merchantId} 
		AND t1.model=#{inventoryType}
		AND (t1.status='019' or t1.status='006')
		AND t3.type='1'
				and t3.bu_id in (
			SELECT id from st_business_unit WHERE `code` IN (	
				'E071100',
				'I020300',
				'I020200'
				)
		)	
		AND (t1.create_date &gt;= #{startTime} OR t1.modify_date &gt;= #{startTime})
		AND  (t1.create_date &lt;= #{endTime} OR t1.modify_date &lt;= #{endTime})
    </select>

    <!--事业部务经销存总表 本月销毁数量 -->
    <select id="getBuAdjustmentInventoryDestroyNum" resultType='map' parameterType='map'>
		 select t2.tallying_unit as tally_unit,SUM(t2.adjust_total) AS num 
		from  s_adjustment_inventory t1
		LEFT JOIN s_adjustment_inventory_item t2 ON t1.id=t2.t_adjustment_inventory_id
		 WHERE t1.model='1' 
		AND t1.`status`='019'
		AND t1.merchant_id =#{merchantId} 
		AND t1.depot_id =#{depotId}
		AND t2.bu_id =#{buId}
		AND  DATE_FORMAT(t1.source_time, '%Y-%m')=#{month}
		AND t2.goods_no=#{goodsNo}
		GROUP BY t2.tallying_unit
    </select>    
    

	
	   <!-- 获取(事业部财务经销存)销毁明细表 -->
    <select id='getBuFinanceDestroy' resultType="map">
		SELECT t1.merchant_id,t1.merchant_name,t1.depot_id,t1.depot_name,t1.id,t1.`code`,
			   t1.create_date,t1.source_time,t1.create_user_id,t1.create_username,
			   t2.goods_id,t2.goods_no,goods_name,t2.tallying_unit,
			   t2.adjust_total,t2.production_date,t2.overdue_date,
			   t2.old_batch_no,t2.type,t2.is_damage,t2.stock_location_type_id,t2.stock_location_type_name
		from s_adjustment_inventory t1
		LEFT JOIN s_adjustment_inventory_item t2 ON t1.id=t2.t_adjustment_inventory_id
		WHERE t1.merchant_id=#{merchantId}
			and t1.depot_id in (
				SELECT id from  st_depot_info where type IN ('a','c','d')
			)
			and t2.bu_id =#{buId} 
			and DATE_FORMAT(t1.source_time,'%Y-%m')=#{month}
			and t1.`status`='019'
			and t1.model='1'		
	</select>

</mapper>
