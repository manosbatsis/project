<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.topideal.mapper.inventory.InventoryDetailsMapper'>


        <!-- 关系映射 -->
    <resultMap id="InventoryDetailsModelMap" type="InventoryDetailsModel" >
                <result property="goodsId" column="goods_id" />
                <result property="num" column="num" />
                <result property="depotId" column="depot_id" />
                <result property="source" column="source" />
                <result property="type" column="type" />
                <result property="depotType" column="depot_type" />
                <result property="merchantName" column="merchant_name" />
                <result property="sourceDate" column="source_date" />
                <result property="businessNo" column="business_no" />
                <result property="productionDate" column="production_date" />
                <result property="topidealCode" column="topideal_code" />
                <result property="ownMonth" column="own_month" />
                <result property="merchantId" column="merchant_id" />
                <result property="isTopBooks" column="is_top_books" />
                <result property="id" column="id" />
                <result property="goodsName" column="goods_name" />
                <result property="barcode" column="barcode" />
                <result property="thingStatus" column="thing_status" />
                <result property="createDate" column="create_date" />
                <result property="divergenceDate" column="divergence_date" />
                <result property="goodsNo" column="goods_no" />
                <result property="overdueDate" column="overdue_date" />
                <result property="depotName" column="depot_name" />
                <result property="batchNo" column="batch_no" />
                <result property="orderNo" column="order_no" />
                <result property="modifyDate" column="modify_date" />
                <result property="operateType" column="operate_type" />
                <result property="thingName" column="thing_name" />
                <result property="unit" column="unit" />
                <result property="sourceType" column="source_type" />
                <result property="depotCode" column="depot_code" />
                <result property="isExpire" column="is_expire" />
                <result property="inventoryBatchId" column="inventory_batch_id" />
                <result property="commbarcode" column="commbarcode" />
                <result property="storePlatformName" column="store_platform_name" />
                <result property="shopCode" column="shop_code" />
                <result property="shopName" column="shop_name" />
                <result property="buId" column="bu_id" />
                <result property="buName" column="bu_name" />
                <result property="stockLocationTypeId" column="stock_location_type_id" />
                <result property="stockLocationTypeName" column="stock_location_type_name" />
    </resultMap>

    <!-- 查询所有信息 -->
    <select id="list" resultMap='InventoryDetailsModelMap' parameterType='InventoryDetailsModel'>
        select <include refid='sql_columns' /> from i_inventory_details  <include refid='sql_where' />
    </select>

    <!-- 查询所有信息 分页 -->
    <select id='listByPage' resultMap='InventoryDetailsModelMap' parameterType='InventoryDetailsModel'>
        select <include refid='sql_columns' /> from i_inventory_details  <include refid='sql_where' />
    </select>

    <!-- 条件查询 -->
    <select id='get' resultMap='InventoryDetailsModelMap' parameterType='InventoryDetailsModel' >
        select <include refid='sql_columns' /> from i_inventory_details  <include refid='sql_where' />
    </select>

    <!-- 新增数据 -->
    <insert id='insert' parameterType='InventoryDetailsModel' keyProperty="id" useGeneratedKeys="true">
    INSERT INTO i_inventory_details
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='goodsId!=null' > goods_id , </if>
                <if test='num!=null' > num , </if>
                <if test='depotId!=null' > depot_id , </if>
                <if test='source!=null and !"".equals(source)' > source , </if>
                <if test='type!=null and !"".equals(type)' > type , </if>
                <if test='depotType!=null and !"".equals(depotType)' > depot_type , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' > merchant_name , </if>
                <if test='sourceDate!=null' > source_date , </if>
                <if test='businessNo!=null and !"".equals(businessNo)' > business_no , </if>
                <if test='productionDate!=null' > production_date , </if>
                <if test='topidealCode!=null and !"".equals(topidealCode)' > topideal_code , </if>
                <if test='ownMonth!=null and !"".equals(ownMonth)' > own_month , </if>
                <if test='merchantId!=null' > merchant_id , </if>
                <if test='isTopBooks!=null and !"".equals(isTopBooks)' > is_top_books , </if>
                <if test='id!=null' > id , </if>
                <if test='goodsName!=null and !"".equals(goodsName)' > goods_name , </if>
                <if test='barcode!=null and !"".equals(barcode)' > barcode , </if>
                <if test='thingStatus!=null and !"".equals(thingStatus)' > thing_status , </if>
                <if test='createDate!=null' > create_date , </if>
                <if test='divergenceDate!=null' > divergence_date , </if>
                <if test='goodsNo!=null and !"".equals(goodsNo)' > goods_no , </if>
                <if test='overdueDate!=null' > overdue_date , </if>
                <if test='depotName!=null and !"".equals(depotName)' > depot_name , </if>
                <if test='batchNo!=null and !"".equals(batchNo)' > batch_no , </if>
                <if test='orderNo!=null and !"".equals(orderNo)' > order_no , </if>
                <if test='modifyDate!=null' > modify_date , </if>
                <if test='operateType!=null and !"".equals(operateType)' > operate_type , </if>
                <if test='thingName!=null and !"".equals(thingName)' > thing_name , </if>
                <if test='unit!=null and !"".equals(unit)' > unit , </if>
                <if test='sourceType!=null and !"".equals(sourceType)' > source_type , </if>
                <if test='depotCode!=null and !"".equals(depotCode)' > depot_code , </if>
                <if test='isExpire!=null and !"".equals(isExpire)' > is_expire , </if>
                <if test='inventoryBatchId!=null' > inventory_batch_id , </if>
                <if test='commbarcode!=null and !"".equals(commbarcode)' > commbarcode , </if>
                <if test='storePlatformName!=null and !"".equals(storePlatformName)' > store_platform_name , </if>
                <if test='shopCode!=null and !"".equals(shopCode)' > shop_code , </if>
                <if test='buId!=null' >bu_id , </if>
                <if test='buName!=null and !"".equals(buName)' > bu_name , </if>
                <if test='stockLocationTypeId!=null' >stock_location_type_id , </if>
                <if test='stockLocationTypeName!=null and !"".equals(stockLocationTypeName)' > stock_location_type_name , </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test='goodsId!=null' > #{goodsId} , </if>
                <if test='num!=null' > #{num} , </if>
                <if test='depotId!=null' > #{depotId} , </if>
                <if test='source!=null and !"".equals(source)' > #{source} , </if>
                <if test='type!=null and !"".equals(type)' > #{type} , </if>
                <if test='depotType!=null and !"".equals(depotType)' > #{depotType} , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' > #{merchantName} , </if>
                <if test='sourceDate!=null' > #{sourceDate} , </if>
                <if test='businessNo!=null and !"".equals(businessNo)' > #{businessNo} , </if>
                <if test='productionDate!=null' > #{productionDate} , </if>
                <if test='topidealCode!=null and !"".equals(topidealCode)' > #{topidealCode} , </if>
                <if test='ownMonth!=null and !"".equals(ownMonth)' > #{ownMonth} , </if>
                <if test='merchantId!=null' > #{merchantId} , </if>
                <if test='isTopBooks!=null and !"".equals(isTopBooks)' > #{isTopBooks} , </if>
                <if test='id!=null' > #{id} , </if>
                <if test='goodsName!=null and !"".equals(goodsName)' > #{goodsName} , </if>
                <if test='barcode!=null and !"".equals(barcode)' > #{barcode} , </if>
                <if test='thingStatus!=null and !"".equals(thingStatus)' > #{thingStatus} , </if>
                <if test='createDate!=null' > #{createDate} , </if>
                <if test='divergenceDate!=null' > #{divergenceDate} , </if>
                <if test='goodsNo!=null and !"".equals(goodsNo)' > #{goodsNo} , </if>
                <if test='overdueDate!=null' > #{overdueDate} , </if>
                <if test='depotName!=null and !"".equals(depotName)' > #{depotName} , </if>
                <if test='batchNo!=null and !"".equals(batchNo)' > #{batchNo} , </if>
                <if test='orderNo!=null and !"".equals(orderNo)' > #{orderNo} , </if>
                <if test='modifyDate!=null' > #{modifyDate} , </if>
                <if test='operateType!=null and !"".equals(operateType)' > #{operateType} , </if>
                <if test='thingName!=null and !"".equals(thingName)' > #{thingName} , </if>
                <if test='unit!=null and !"".equals(unit)' > #{unit} , </if>
                <if test='sourceType!=null and !"".equals(sourceType)' > #{sourceType} , </if>
                <if test='depotCode!=null and !"".equals(depotCode)' > #{depotCode} , </if>
                <if test='isExpire!=null and !"".equals(isExpire)' > #{isExpire} , </if>
                <if test='inventoryBatchId!=null' > #{inventoryBatchId}, </if>
                <if test='commbarcode!=null and !"".equals(commbarcode)' > #{commbarcode}, </if>
                <if test='storePlatformName!=null and !"".equals(storePlatformName)' > #{storePlatformName}, </if>
                <if test='shopCode!=null and !"".equals(shopCode)' > #{shopCode}, </if>
                <if test='buId!=null' > #{buId} , </if>
                <if test='buName!=null and !"".equals(buName)' > #{buName} , </if>
                <if test='stockLocationTypeId!=null' > #{stockLocationTypeId} , </if>
                <if test='stockLocationTypeName!=null and !"".equals(stockLocationTypeName)' > #{stockLocationTypeName} , </if>
        </trim>
    </insert>

    <!-- 修改数据 -->
    <update id='update' parameterType='InventoryDetailsModel' keyProperty="id" useGeneratedKeys="true">
    UPDATE  i_inventory_details SET
        <trim  suffixOverrides=",">
                <if test='goodsId!=null' > goods_id= #{goodsId} , </if>
                <if test='num!=null' > num= #{num} , </if>
                <if test='depotId!=null' > depot_id= #{depotId} , </if>
                <if test='source!=null and !"".equals(source)' >source= #{source} , </if>
                <if test='type!=null and !"".equals(type)' >type= #{type} , </if>
                <if test='depotType!=null and !"".equals(depotType)' >depot_type= #{depotType} , </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} , </if>
                <if test='sourceDate!=null' > source_date= #{sourceDate} , </if>
                <if test='businessNo!=null and !"".equals(businessNo)' >business_no= #{businessNo} , </if>
                <if test='productionDate!=null' > production_date= #{productionDate} , </if>
                <if test='topidealCode!=null and !"".equals(topidealCode)' >topideal_code= #{topidealCode} , </if>
                <if test='ownMonth!=null and !"".equals(ownMonth)' >own_month= #{ownMonth} , </if>
                <if test='merchantId!=null' > merchant_id= #{merchantId} , </if>
                <if test='isTopBooks!=null and !"".equals(isTopBooks)' >is_top_books= #{isTopBooks} , </if>
                <if test='id!=null' > id= #{id} , </if>
                <if test='goodsName!=null and !"".equals(goodsName)' >goods_name= #{goodsName} , </if>
                <if test='barcode!=null and !"".equals(barcode)' >barcode= #{barcode} , </if>
                <if test='thingStatus!=null and !"".equals(thingStatus)' >thing_status= #{thingStatus} , </if>
                <if test='createDate!=null' > create_date= #{createDate} , </if>
                <if test='divergenceDate!=null' > divergence_date= #{divergenceDate} , </if>
                <if test='goodsNo!=null and !"".equals(goodsNo)' >goods_no= #{goodsNo} , </if>
                <if test='overdueDate!=null' > overdue_date= #{overdueDate} , </if>
                <if test='depotName!=null and !"".equals(depotName)' >depot_name= #{depotName} , </if>
                <if test='batchNo!=null and !"".equals(batchNo)' >batch_no= #{batchNo} , </if>
                <if test='orderNo!=null and !"".equals(orderNo)' >order_no= #{orderNo} , </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} , </if>
                <if test='operateType!=null and !"".equals(operateType)' >operate_type= #{operateType} , </if>
                <if test='thingName!=null and !"".equals(thingName)' >thing_name= #{thingName} , </if>
                <if test='unit!=null and !"".equals(unit)' >unit= #{unit} , </if>
                <if test='sourceType!=null and !"".equals(sourceType)' >source_type= #{sourceType} , </if>
                <if test='depotCode!=null and !"".equals(depotCode)' >depot_code= #{depotCode} , </if>
                <if test='isExpire!=null and !"".equals(isExpire)' >is_expire= #{isExpire} , </if>
                <if test='inventoryBatchId!=null' > inventory_batch_id= #{inventoryBatchId} , </if>
                <if test='commbarcode!=null and !"".equals(commbarcode)' > commbarcode= #{commbarcode} , </if>
                <if test='storePlatformName!=null and !"".equals(storePlatformName)' > store_platform_name= #{storePlatformName} , </if>
                <if test='shopCode!=null and !"".equals(shopCode)' > shop_code= #{shopCode} , </if>
                <if test='buId!=null' > bu_id= #{buId} , </if>
                <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} , </if>
                <if test='stockLocationTypeId!=null' > stock_location_type_id= #{stockLocationTypeId} , </if>
                <if test='stockLocationTypeName!=null and !"".equals(stockLocationTypeName)' >stock_location_type_name= #{stockLocationTypeName} , </if>
        </trim>
        <where>
            id=#{id}
        </where>
    </update>

    <!-- 删除数据 -->
    <delete id='del' parameterType='java.lang.Long'>
        delete from i_inventory_details  where id=#{id}
    </delete>

    <!-- 批量删除数据 -->
    <delete id='batchDel' parameterType='java.util.ArrayList'>
        delete from i_inventory_details where id in
        <foreach collection='list' item='id' separator=',' open='(' close=')'>
            #{id}
        </foreach>
    </delete>

    <!-- 表字段 -->
    <sql id='sql_columns'>
        goods_id,
        num,
        depot_id,
        source,
        type,
        depot_type,
        merchant_name,
        source_date,
        business_no,
        production_date,
        topideal_code,
        own_month,
        merchant_id,
        is_top_books,
        id,
        goods_name,
        barcode,
        thing_status,
        create_date,
        divergence_date,
        goods_no,
        overdue_date,
        depot_name,
        batch_no,
        order_no,
        modify_date,
        operate_type,
        thing_name,
        unit,
        source_type,
        depot_code,
        is_expire,
        inventory_batch_id,
        commbarcode,
        store_platform_name,
        shop_code,
        bu_id,
        bu_name,
        stock_location_type_id,
        stock_location_type_name
        
    </sql>

    <!-- 查询条件 -->
    <sql id='sql_where'>
        <where>
            <trim suffixOverrides='and'>
                <if test='goodsId!=null' > goods_id= #{goodsId} and </if>
                <if test='num!=null' > num= #{num} and </if>
                <if test='depotId!=null' > depot_id= #{depotId} and </if>
                <if test='source!=null and !"".equals(source)' >source= #{source} and </if>
                <if test='type!=null and !"".equals(type)' >type= #{type} and </if>
                <if test='depotType!=null and !"".equals(depotType)' >depot_type= #{depotType} and </if>
                <if test='merchantName!=null and !"".equals(merchantName)' >merchant_name= #{merchantName} and </if>
                <if test='sourceDate!=null' > source_date= #{sourceDate} and </if>
                <if test='businessNo!=null and !"".equals(businessNo)' >business_no= #{businessNo} and </if>
                <if test='productionDate!=null' > production_date= #{productionDate} and </if>
                <if test='topidealCode!=null and !"".equals(topidealCode)' >topideal_code= #{topidealCode} and </if>
                <if test='ownMonth!=null and !"".equals(ownMonth)' >own_month= #{ownMonth} and </if>
                <if test='merchantId!=null' > merchant_id= #{merchantId} and </if>
                <if test='isTopBooks!=null and !"".equals(isTopBooks)' >is_top_books= #{isTopBooks} and </if>
                <if test='id!=null' > id= #{id} and </if>
                <if test='goodsName!=null and !"".equals(goodsName)' >goods_name= #{goodsName} and </if>
                <if test='barcode!=null and !"".equals(barcode)' >barcode= #{barcode} and </if>
                <if test='thingStatus!=null and !"".equals(thingStatus)' >thing_status= #{thingStatus} and </if>
                <if test='createDate!=null' > create_date= #{createDate} and </if>
                <if test='divergenceDate!=null' > divergence_date= #{divergenceDate} and </if>
                <if test='goodsNo!=null and !"".equals(goodsNo)' >goods_no= #{goodsNo} and </if>
                <if test='overdueDate!=null' > overdue_date= #{overdueDate} and </if>
                <if test='depotName!=null and !"".equals(depotName)' >depot_name= #{depotName} and </if>
                <if test='batchNo!=null and !"".equals(batchNo)' >batch_no= #{batchNo} and </if>
                <if test='orderNo!=null and !"".equals(orderNo)' >order_no= #{orderNo} and </if>
                <if test='modifyDate!=null' > modify_date= #{modifyDate} and </if>
                <if test='operateType!=null and !"".equals(operateType)' >operate_type= #{operateType} and </if>
                <if test='thingName!=null and !"".equals(thingName)' >thing_name= #{thingName} and </if>
                <if test='unit!=null and !"".equals(unit)' >unit= #{unit} and </if>
                <if test='sourceType!=null and !"".equals(sourceType)' >source_type= #{sourceType} and </if>
                <if test='depotCode!=null and !"".equals(depotCode)' >depot_code= #{depotCode} and </if>
                <if test='isExpire!=null and !"".equals(isExpire)' >is_expire= #{isExpire} and </if>
                <if test='inventoryBatchId!=null' > inventory_batch_id= #{inventoryBatchId} and </if>
                <if test='commbarcode!=null and !"".equals(commbarcode)' > commbarcode= #{commbarcode} and </if>
                <if test='storePlatformName!=null and !"".equals(storePlatformName)' > store_platform_name= #{storePlatformName} and </if>
                <if test='shopCode!=null and !"".equals(shopCode)' > shop_code= #{shopCode} and </if>
                <if test='buId!=null' > bu_id= #{buId} and </if>
                <if test='buName!=null and !"".equals(buName)' >bu_name= #{buName} and </if>
                <if test='stockLocationTypeId!=null' > stock_location_type_id= #{stockLocationTypeId} and </if>
                <if test='stockLocationTypeName!=null and !"".equals(stockLocationTypeName)' >stock_location_type_name= #{stockLocationTypeName} and </if>
            </trim>
        </where>
    </sql>
    
	<!--自定义SQL-->

      <!-- 统计事业部商家、仓库、条码在本月的入库 -->
    <select id='getBuBarcodeInStorageSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id = #{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('001','0010','005','0019','0026','0027','0029') and operate_type = '1'
		group by barcode,unit
    </select>
     
     <!-- 统计事业部商家、仓库、条码在本月的出库 -->
    <select id='getBuBarcodeOutStorageSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id = #{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('003','006','008','0011','0019','0028','0030') and operate_type = '0'
		group by barcode,unit
    </select>

         <!-- 统计商家、仓库、在本月的出入库 明细-->
    <select id='getBuOutInStorageDetail' resultType='map' parameterType='map' >
      <!--   select 
        <include refid='sql_columns_out_or_in' />
        from i_inventory_details t1  force index(inventory_details_merchant_depot_own_month_bu_source_type)
		LEFT JOIN st_merchant_shop_rel t2 ON t1.shop_code=t2.shop_code
		where t1.merchant_id = #{merchantId} and t1.depot_id=#{depotId}  and t1.own_month=#{month}
			  and t1.bu_id =#{buId} 
		      and t1.source_type in('001','0010','005','003','006','008','0011','0019','0026','0027','0028','0029','0030','0031','0032')
		limit #{startIndex},1000 -->
		
		select 
       		 merchant_id,depot_id,bu_id,own_month,unit,operate_type,
       		 goods_id,
       		 SUM(num) as num,
       		 stock_location_type_id,
			 max(stock_location_type_name) as stock_location_type_name
        from i_inventory_details  force index(inventory_details_merchant_depot_own_month_bu_source_type)
		where merchant_id = #{merchantId} and depot_id=#{depotId}  and own_month=#{month}
			  and bu_id =#{buId} 
		      and source_type in('001','0010','005','003','006','008','0011','0019','0021','0026','0027','0028','0029','0030','0031','0032','0033')		
		GROUP BY merchant_id,depot_id,bu_id,own_month,unit,operate_type,goods_id,stock_location_type_id
		
    </select>
    
     <sql id='sql_columns_out_or_in'>
        goods_id,
        t1.num,
        t1.depot_id,
        t1.source,
        t1.type,
        t1.depot_type,
        t1.merchant_name,
        t1.source_date,
        t1.business_no,
        t1.production_date,
        t1.topideal_code,
        t1.own_month,
        t1.merchant_id,
        t1.is_top_books,
        t1.id,
        t1.goods_name,
        t1.barcode,
        t1.thing_status,
        t1.create_date,
        t1.divergence_date,
        t1.goods_no,
        t1.overdue_date,
        t1.depot_name,
        t1.batch_no,
        t1.order_no,
        t1.modify_date,
        t1.operate_type,
        t1.thing_name,
        t1.unit,
        t1.source_type,
        t1.depot_code,
        t1.is_expire,
        t1.inventory_batch_id,
        t1.commbarcode,
        t1.store_platform_name,
        t1.shop_code,
        t1.bu_id,
        t1.bu_name,
        t2.shop_name
        
    </sql>
    

    
      <!-- 统计商家、仓库、条码在本月的出入库 明细数量-->
    <select id='getBarcodeOutInStorageDetailCount' resultType='Integer' parameterType='map' >
        SELECT count(*) FROM i_inventory_details
		WHERE
			merchant_id = #{merchantId} and depot_id=#{depotId} and barcode=#{barcode} and own_month=#{month}
		AND source_type in('001','0010','005','003','006','008','0011','0019','0026','0027','0028','0029')
    </select>

    <!-- 统计事业部商家、仓库、条码在本月的损益入库 -->
    <select id='getBuBarcodeProfitLossInStorageSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id =#{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('0015','0014','0012','0024') and operate_type = '1'
		group by barcode,unit
    </select>

     <!-- 统计事业部商家、仓库、条码在本月的损益出库 -->
    <select id='getBuBarcodeProfitLossOutStorageSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id =#{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('0015','0013','0014','0012','0024','0022','0025') and operate_type = '0'
		group by barcode,unit
    </select>
                
        <!-- 统计事业部商家、仓库、条码在本月的好品损益入库 -->
    <select id='getBuBarcodeProfitlossGoodInSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id =#{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('0015','0014','0012','0016','0024') and operate_type = '1' and type='0'
		group by barcode,unit
    </select>

    
     <!-- 统计商家、仓库、条码在本月的好品损益出库 -->
    <select id='getBuBarcodeProfitlossGoodOutSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id =#{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('0015','0013','0014','0012','0024','0022','0025','0016') and operate_type = '0' and type='0'
		group by barcode,unit
    </select>
    

    <!-- 统计事业部商家、仓库、条码在本月的好品坏品益入库 -->
 	<select id='getBuBarcodeProfitlossDamagedInSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id =#{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('0015','0014','0012','0016','0024') and operate_type = '1' and type='1'
		group by barcode,unit
    </select>
       
         <!-- 统计事业部商家、仓库、条码在本月的坏品损益出库 -->
    <select id='getBuBarcodeProfitlossDamagedOutSum' resultType='map' parameterType='map' >
        select barcode,unit,sum(num) AS num from i_inventory_details
		where merchant_id =#{merchantId} and depot_id=#{depotId} and bu_id=#{buId} and own_month=#{month} and barcode=#{barcode}
			  and source_type in('0015','0013','0014','0012','0024','0022','0025','0016') and operate_type = '0' and type='1'
		group by barcode,unit
    </select> 

    <!-- 事业部损益明细 -->
    <select id='getBuProfitLossOutInStorageDetail' resultMap='InventoryDetailsModelMap' parameterType='map'  >
        select <include refid='sql_columns_profitLoss_out_in' /> from i_inventory_details
        where merchant_id =#{merchantId} and depot_id=#{depotId} and own_month=#{month}
        and bu_id =#{buId}
        and source_type in('0015','0014','0012','0013','0016','0022','0024','0025')
        limit #{startIndex},1000
    </select>
    
      <sql id='sql_columns_profitLoss_out_in'>
        goods_id,
        num,
        depot_id,
        source,
        type,
        depot_type,
        merchant_name,
        source_date,
        business_no,
        production_date,
        topideal_code,
        own_month,
        merchant_id,
        is_top_books,
        id,
        goods_name,
        barcode,
        thing_status,
        create_date,
        divergence_date,
        goods_no,
        overdue_date,
        depot_name,
        batch_no,
        order_no,
        modify_date,
        operate_type,
        thing_name,
        unit,
        source_type,
        depot_code,
        is_expire,
        inventory_batch_id,
        commbarcode,
        store_platform_name,
        shop_code,
        bu_id,
        bu_name,
        stock_location_type_id,
		stock_location_type_name
        
    </sql>

	<!-- 来货残次 -->
	<select id='getInbadDetails' resultMap='InventoryDetailsModelMap' parameterType='map' >
        select  <include refid='sql_columns_profitLoss_out_in' /> from i_inventory_details
        where merchant_id =#{merchantId} and depot_id=#{depotId} and  bu_id =#{buId} and  own_month=#{month} and type='1'
        and source_type in('001','005','0010','0029','0026') 
    </select> 
    <!-- 出库残次   -->
    <select id='getOutbadDetails' resultMap='InventoryDetailsModelMap' parameterType='map' >
         select  <include refid='sql_columns_profitLoss_out_in' /> from i_inventory_details
        where merchant_id =#{merchantId} and depot_id=#{depotId} and  bu_id =#{buId}  and own_month=#{month}  and type='1'
        and source_type in('003','0011','006','0030','0033','0021')
    </select>
    <!-- 迁移数据到历史表 -->
    <insert id='synsMoveToHistory' parameterType='map'>
        insert into i_inventory_details_history select * from i_inventory_details
        where divergence_date &lt; #{divergenceDate}
    </insert>
    <!-- 删除已迁移到历史表的数据 -->
    <delete id='delMoveToHistory' parameterType='map'>
        delete from i_inventory_details
        where divergence_date &lt; #{divergenceDate}
    </delete>
</mapper>
