<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.topideal</groupId>
    <artifactId>derp-parent</artifactId>
    <version>4.0-SNAPSHOT</version>
  </parent>
  <groupId>com.topideal</groupId>
  <artifactId>derp-web-storage</artifactId>
  <version>4.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>derp-web-storage</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>com.topideal</groupId>
      <artifactId>derp-dao-storage</artifactId>
      <version>4.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.topideal</groupId>
      <artifactId>derp-json-mq</artifactId>
      <version>4.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.topideal</groupId>
      <artifactId>derp-external-api</artifactId>
      <version>4.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <!--<exclusions>
             &lt;!&ndash;排除tomcat&ndash;&gt;
            <exclusion>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
            </exclusion>
      </exclusions>-->
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <!--<scope>test</scope>-->
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <!-- <scope>test</scope>-->
    </dependency>

    <!--全局排除排除Logback日志spring-boot-starter-logging内的所有依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- log4j -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j</artifactId>
    </dependency>
    <!--shiro start-->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
    </dependency>
    <!--shiro end-->

    <!--jstl start -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl </artifactId>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId> org.aspectj</groupId >
      <artifactId> aspectjweaver</artifactId >
      <version> 1.8.7</version >
    </dependency>
    <!-- apollo配置中心 -->
    <dependency>
      <groupId>com.ctrip.framework.apollo</groupId>
      <artifactId>apollo-client</artifactId>
    </dependency>
    <!--<dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>-->
  </dependencies>
  <build>
    <finalName>derp-web-storage</finalName>
    <plugins>
      <!-- 配置manifest文件，以及服务jar的启动类 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <classesDirectory>target/classes/</classesDirectory>
          <archive>
            <manifest>
              <!--执行Jar文件的启动类,使用dubbo自带的启动类 -->
              <mainClass>com.topideal.StorageWebMainApplication</mainClass>
              <!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->
              <useUniqueVersions>false</useUniqueVersions>
              <addClasspath>true</addClasspath>
              <!--将服务依赖的jar文件，放到lib文件夹下 -->
              <classpathPrefix>lib/</classpathPrefix>
            </manifest>
            <manifestEntries>
              <Class-Path>.</Class-Path>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <!-- 将运行服务的jar文件，依赖的其它jar文件放在lib文件夹下 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <type>jar</type>
              <includeTypes>jar</includeTypes>
              <!--<useUniqueVersions>false</useUniqueVersions>-->
              <outputDirectory>
                ${project.build.directory}/lib
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <!-- 打包时将jsp文件拷贝到META-INF目录下-->
      <resource>
        <!-- 指定resources插件处理哪个目录下的资源文件 -->
        <directory>src/main/webapp</directory>
        <!--注意此次必须要放在此目录下才能被访问到-->
        <targetPath>META-INF/resources</targetPath>
      </resource>
      <resource>
        <!-- 指定resources插件处理哪个目录下的资源文件 -->
        <directory>src/main/resources</directory>
      </resource>
    </resources>
  </build>
</project>
